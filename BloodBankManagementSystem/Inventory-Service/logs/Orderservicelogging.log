2025-03-05 10:50:18 [restartedMain] INFO  com.Blood.Inventory_Service.InventoryServiceApplication - Starting InventoryServiceApplication using Java 17.0.12 with PID 17944 (C:\Users\kasiram.palpandi\git\repository\BloodBankManagementSystem\Inventory-Service\target\classes started by kasiram.palpandi in C:\Users\kasiram.palpandi\git\repository\BloodBankManagementSystem\Inventory-Service)
2025-03-05 10:50:18 [restartedMain] INFO  com.Blood.Inventory_Service.InventoryServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-03-05 10:50:18 [restartedMain] INFO  org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-03-05 10:50:18 [restartedMain] INFO  org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-03-05 10:50:19 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-05 10:50:19 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 171 ms. Found 2 JPA repository interfaces.
2025-03-05 10:50:20 [restartedMain] INFO  org.springframework.cloud.context.scope.GenericScope - BeanFactory id=f2f93abc-93bf-3963-82c3-fd5199f6b8dd
2025-03-05 10:50:20 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8084 (http)
2025-03-05 10:50:20 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8084"]
2025-03-05 10:50:20 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-03-05 10:50:20 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.36]
2025-03-05 10:50:20 [restartedMain] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-03-05 10:50:20 [restartedMain] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2356 ms
2025-03-05 10:50:21 [restartedMain] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-05 10:50:21 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.8.Final
2025-03-05 10:50:21 [restartedMain] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-03-05 10:50:21 [restartedMain] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-05 10:50:21 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-05 10:50:21 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2ba331a3
2025-03-05 10:50:21 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-05 10:50:21 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-05 10:50:21 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-03-05 10:50:21 [restartedMain] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-05 10:50:22 [restartedMain] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-05 10:50:22 [restartedMain] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 10:50:23 [restartedMain] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-05 10:50:23 [restartedMain] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 10:50:24 [restartedMain] WARN  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2025-03-05 10:50:25 [restartedMain] INFO  org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-03-05 10:50:25 [restartedMain] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-03-05 10:50:25 [restartedMain] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-03-05 10:50:25 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-03-05 10:50:25 [restartedMain] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 10:50:25 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-03-05 10:50:25 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-03-05 10:50:25 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-03-05 10:50:25 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2025-03-05 10:50:25 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-03-05 10:50:25 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-03-05 10:50:25 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-03-05 10:50:25 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2025-03-05 10:50:25 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-03-05 10:50:26 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-03-05 10:50:26 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1741152026004 with initial instances count: 1
2025-03-05 10:50:26 [restartedMain] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Registering application INVENTORY-SERVICE with eureka with status UP
2025-03-05 10:50:26 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741152026011, current=UP, previous=STARTING]
2025-03-05 10:50:26 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 10:50:26 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8084"]
2025-03-05 10:50:26 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8084 (http) with context path '/'
2025-03-05 10:50:26 [restartedMain] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration - Updating port to 8084
2025-03-05 10:50:26 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 10:50:26 [restartedMain] INFO  com.Blood.Inventory_Service.InventoryServiceApplication - Started InventoryServiceApplication in 8.68 seconds (process running for 10.094)
2025-03-05 10:52:07 [main] INFO  org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest]: InventroyControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-03-05 10:52:07 [main] INFO  org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.Blood.Inventory_Service.InventoryServiceApplication for test class com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest
2025-03-05 10:52:07 [main] INFO  org.springframework.boot.devtools.restart.RestartApplicationListener - Restart disabled due to context in which it is running
2025-03-05 10:52:08 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Starting InventroyControllerTest using Java 17.0.12 with PID 9012 (started by kasiram.palpandi in C:\Users\kasiram.palpandi\git\repository\BloodBankManagementSystem\Inventory-Service)
2025-03-05 10:52:08 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-03-05 10:52:09 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-05 10:52:09 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 165 ms. Found 2 JPA repository interfaces.
2025-03-05 10:52:09 [main] INFO  org.springframework.cloud.context.scope.GenericScope - BeanFactory id=5c617336-ca48-35fa-acf9-2c540da760b9
2025-03-05 10:52:10 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-05 10:52:10 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.8.Final
2025-03-05 10:52:10 [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-03-05 10:52:10 [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-05 10:52:10 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-05 10:52:11 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2079fcfc
2025-03-05 10:52:11 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-05 10:52:11 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-05 10:52:11 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-03-05 10:52:11 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-05 10:52:12 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-05 10:52:12 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 10:52:13 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-05 10:52:13 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 10:52:13 [main] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 10:52:13 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 10:52:13 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 3 ms
2025-03-05 10:52:14 [main] INFO  org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-03-05 10:52:14 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-03-05 10:52:14 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-03-05 10:52:14 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-03-05 10:52:14 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 10:52:14 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-03-05 10:52:14 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-03-05 10:52:14 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-03-05 10:52:14 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2025-03-05 10:52:14 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-03-05 10:52:14 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-03-05 10:52:14 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-03-05 10:52:15 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2025-03-05 10:52:15 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-03-05 10:52:15 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-03-05 10:52:15 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1741152135165 with initial instances count: 3
2025-03-05 10:52:15 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Registering application INVENTORY-SERVICE with eureka with status UP
2025-03-05 10:52:15 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741152135171, current=UP, previous=STARTING]
2025-03-05 10:52:15 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 10:52:15 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Started InventroyControllerTest in 7.275 seconds (process running for 9.368)
2025-03-05 10:52:15 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 10:52:16 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 10:52:16 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 10:52:16 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 10:52:16 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 10:52:16 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 10:52:16 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Donor 'kasiram' added successfully to inventory.
2025-03-05 10:52:17 [SpringApplicationShutdownHook] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Unregistering application INVENTORY-SERVICE with eureka with status DOWN
2025-03-05 10:52:17 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741152137161, current=DOWN, previous=UP]
2025-03-05 10:52:17 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 10:52:17 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 10:52:17 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 10:52:17 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-03-05 10:52:17 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-03-05 10:52:17 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-03-05 10:52:20 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2025-03-05 10:52:20 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - deregister  status: 200
2025-03-05 10:52:20 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-03-05 10:52:26 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - Re-registering apps/INVENTORY-SERVICE
2025-03-05 10:52:26 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 10:52:26 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 10:55:25 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 10:59:24 [main] INFO  org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest]: InventroyControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-03-05 10:59:25 [main] INFO  org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.Blood.Inventory_Service.InventoryServiceApplication for test class com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest
2025-03-05 10:59:25 [main] INFO  org.springframework.boot.devtools.restart.RestartApplicationListener - Restart disabled due to context in which it is running
2025-03-05 10:59:25 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Starting InventroyControllerTest using Java 17.0.12 with PID 2676 (started by kasiram.palpandi in C:\Users\kasiram.palpandi\git\repository\BloodBankManagementSystem\Inventory-Service)
2025-03-05 10:59:25 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-03-05 10:59:26 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-05 10:59:27 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 207 ms. Found 2 JPA repository interfaces.
2025-03-05 10:59:27 [main] INFO  org.springframework.cloud.context.scope.GenericScope - BeanFactory id=5c617336-ca48-35fa-acf9-2c540da760b9
2025-03-05 10:59:27 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-05 10:59:28 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.8.Final
2025-03-05 10:59:28 [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-03-05 10:59:28 [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-05 10:59:28 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-05 10:59:28 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@19e5e110
2025-03-05 10:59:28 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-05 10:59:28 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-05 10:59:28 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-03-05 10:59:28 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-05 10:59:29 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-05 10:59:29 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 10:59:30 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-05 10:59:30 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 10:59:31 [main] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 10:59:31 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 10:59:31 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 2 ms
2025-03-05 10:59:31 [main] INFO  org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-03-05 10:59:32 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-03-05 10:59:32 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-03-05 10:59:32 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-03-05 10:59:32 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 10:59:32 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-03-05 10:59:32 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-03-05 10:59:32 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-03-05 10:59:32 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2025-03-05 10:59:32 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-03-05 10:59:32 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-03-05 10:59:32 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-03-05 10:59:32 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2025-03-05 10:59:32 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-03-05 10:59:32 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-03-05 10:59:32 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1741152572521 with initial instances count: 3
2025-03-05 10:59:32 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Registering application INVENTORY-SERVICE with eureka with status UP
2025-03-05 10:59:32 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741152572529, current=UP, previous=STARTING]
2025-03-05 10:59:32 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 10:59:32 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Started InventroyControllerTest in 7.175 seconds (process running for 8.811)
2025-03-05 10:59:32 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 10:59:33 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 10:59:34 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 10:59:34 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 10:59:34 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 2 ms
2025-03-05 10:59:34 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 10:59:34 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Donor 'kasiram' added successfully to inventory.
2025-03-05 10:59:34 [SpringApplicationShutdownHook] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Unregistering application INVENTORY-SERVICE with eureka with status DOWN
2025-03-05 10:59:34 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741152574438, current=DOWN, previous=UP]
2025-03-05 10:59:34 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 10:59:34 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 10:59:34 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 10:59:34 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-03-05 10:59:34 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-03-05 10:59:34 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-03-05 10:59:37 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2025-03-05 10:59:37 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - deregister  status: 200
2025-03-05 10:59:37 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-03-05 10:59:56 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - Re-registering apps/INVENTORY-SERVICE
2025-03-05 10:59:56 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 10:59:56 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:00:25 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 11:00:57 [main] INFO  org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest]: InventroyControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-03-05 11:00:57 [main] INFO  org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.Blood.Inventory_Service.InventoryServiceApplication for test class com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest
2025-03-05 11:00:57 [main] INFO  org.springframework.boot.devtools.restart.RestartApplicationListener - Restart disabled due to context in which it is running
2025-03-05 11:00:58 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Starting InventroyControllerTest using Java 17.0.12 with PID 17336 (started by kasiram.palpandi in C:\Users\kasiram.palpandi\git\repository\BloodBankManagementSystem\Inventory-Service)
2025-03-05 11:00:58 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-03-05 11:00:59 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-05 11:00:59 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 140 ms. Found 2 JPA repository interfaces.
2025-03-05 11:00:59 [main] INFO  org.springframework.cloud.context.scope.GenericScope - BeanFactory id=5c617336-ca48-35fa-acf9-2c540da760b9
2025-03-05 11:01:00 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-05 11:01:00 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.8.Final
2025-03-05 11:01:00 [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-03-05 11:01:00 [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-05 11:01:00 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-05 11:01:01 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@12a9e864
2025-03-05 11:01:01 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-05 11:01:01 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-05 11:01:01 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-03-05 11:01:01 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-05 11:01:02 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-05 11:01:02 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:01:03 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-05 11:01:03 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:01:03 [main] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:01:03 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:01:03 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 2 ms
2025-03-05 11:01:04 [main] INFO  org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-03-05 11:01:04 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-03-05 11:01:04 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-03-05 11:01:04 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-03-05 11:01:04 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 11:01:04 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-03-05 11:01:04 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-03-05 11:01:04 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-03-05 11:01:04 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2025-03-05 11:01:04 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-03-05 11:01:04 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-03-05 11:01:04 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-03-05 11:01:05 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2025-03-05 11:01:05 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-03-05 11:01:05 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-03-05 11:01:05 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1741152665305 with initial instances count: 3
2025-03-05 11:01:05 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Registering application INVENTORY-SERVICE with eureka with status UP
2025-03-05 11:01:05 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741152665312, current=UP, previous=STARTING]
2025-03-05 11:01:05 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:01:05 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Started InventroyControllerTest in 7.64 seconds (process running for 9.488)
2025-03-05 11:01:05 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:01:06 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:01:06 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:01:06 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:01:06 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 11:01:07 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 11:01:07 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Donor 'kasiram' added successfully to inventory.
2025-03-05 11:01:07 [SpringApplicationShutdownHook] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Unregistering application INVENTORY-SERVICE with eureka with status DOWN
2025-03-05 11:01:07 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741152667291, current=DOWN, previous=UP]
2025-03-05 11:01:07 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:01:07 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:01:07 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:01:07 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-03-05 11:01:07 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-03-05 11:01:07 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-03-05 11:01:10 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2025-03-05 11:01:10 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - deregister  status: 200
2025-03-05 11:01:10 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-03-05 11:01:26 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - Re-registering apps/INVENTORY-SERVICE
2025-03-05 11:01:26 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:01:26 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:03:05 [main] INFO  org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest]: InventroyControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-03-05 11:03:05 [main] INFO  org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.Blood.Inventory_Service.InventoryServiceApplication for test class com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest
2025-03-05 11:03:06 [main] INFO  org.springframework.boot.devtools.restart.RestartApplicationListener - Restart disabled due to context in which it is running
2025-03-05 11:03:06 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Starting InventroyControllerTest using Java 17.0.12 with PID 13728 (started by kasiram.palpandi in C:\Users\kasiram.palpandi\git\repository\BloodBankManagementSystem\Inventory-Service)
2025-03-05 11:03:06 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-03-05 11:03:07 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-05 11:03:07 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 147 ms. Found 2 JPA repository interfaces.
2025-03-05 11:03:08 [main] INFO  org.springframework.cloud.context.scope.GenericScope - BeanFactory id=5c617336-ca48-35fa-acf9-2c540da760b9
2025-03-05 11:03:08 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-05 11:03:08 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.8.Final
2025-03-05 11:03:08 [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-03-05 11:03:09 [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-05 11:03:09 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-05 11:03:09 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5cb76070
2025-03-05 11:03:09 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-05 11:03:09 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-05 11:03:09 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-03-05 11:03:09 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-05 11:03:10 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-05 11:03:10 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:03:12 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-05 11:03:12 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:03:13 [main] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:03:13 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:03:13 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 11:03:13 [main] INFO  org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-03-05 11:03:14 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-03-05 11:03:14 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-03-05 11:03:14 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-03-05 11:03:14 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 11:03:14 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-03-05 11:03:14 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-03-05 11:03:14 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-03-05 11:03:14 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2025-03-05 11:03:14 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-03-05 11:03:14 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-03-05 11:03:14 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-03-05 11:03:14 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2025-03-05 11:03:14 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-03-05 11:03:14 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-03-05 11:03:14 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1741152794792 with initial instances count: 3
2025-03-05 11:03:14 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Registering application INVENTORY-SERVICE with eureka with status UP
2025-03-05 11:03:14 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741152794800, current=UP, previous=STARTING]
2025-03-05 11:03:14 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:03:14 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Started InventroyControllerTest in 8.578 seconds (process running for 10.282)
2025-03-05 11:03:15 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:03:17 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:03:17 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:03:17 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:03:17 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 11:03:18 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 11:03:18 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Donor 'kasiram' added successfully to inventory.
2025-03-05 11:03:18 [SpringApplicationShutdownHook] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Unregistering application INVENTORY-SERVICE with eureka with status DOWN
2025-03-05 11:03:18 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741152798344, current=DOWN, previous=UP]
2025-03-05 11:03:18 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:03:18 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:03:18 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:03:18 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-03-05 11:03:18 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-03-05 11:03:18 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-03-05 11:03:21 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2025-03-05 11:03:21 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - deregister  status: 200
2025-03-05 11:03:21 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-03-05 11:03:26 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - Re-registering apps/INVENTORY-SERVICE
2025-03-05 11:03:26 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:03:26 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:03:36 [main] INFO  org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest]: InventroyControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-03-05 11:03:36 [main] INFO  org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.Blood.Inventory_Service.InventoryServiceApplication for test class com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest
2025-03-05 11:03:36 [main] INFO  org.springframework.boot.devtools.restart.RestartApplicationListener - Restart disabled due to context in which it is running
2025-03-05 11:03:37 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Starting InventroyControllerTest using Java 17.0.12 with PID 11548 (started by kasiram.palpandi in C:\Users\kasiram.palpandi\git\repository\BloodBankManagementSystem\Inventory-Service)
2025-03-05 11:03:37 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-03-05 11:03:38 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-05 11:03:38 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 155 ms. Found 2 JPA repository interfaces.
2025-03-05 11:03:38 [main] INFO  org.springframework.cloud.context.scope.GenericScope - BeanFactory id=5c617336-ca48-35fa-acf9-2c540da760b9
2025-03-05 11:03:39 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-05 11:03:39 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.8.Final
2025-03-05 11:03:39 [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-03-05 11:03:39 [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-05 11:03:39 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-05 11:03:39 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@63318b56
2025-03-05 11:03:39 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-05 11:03:40 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-05 11:03:40 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-03-05 11:03:40 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-05 11:03:40 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-05 11:03:40 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:03:41 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-05 11:03:42 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:03:42 [main] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:03:42 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:03:42 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 11:03:43 [main] INFO  org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-03-05 11:03:43 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-03-05 11:03:43 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-03-05 11:03:43 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-03-05 11:03:43 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 11:03:43 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-03-05 11:03:43 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-03-05 11:03:43 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-03-05 11:03:43 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2025-03-05 11:03:43 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-03-05 11:03:43 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-03-05 11:03:43 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-03-05 11:03:43 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2025-03-05 11:03:43 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-03-05 11:03:43 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-03-05 11:03:43 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1741152823958 with initial instances count: 3
2025-03-05 11:03:43 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Registering application INVENTORY-SERVICE with eureka with status UP
2025-03-05 11:03:43 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741152823963, current=UP, previous=STARTING]
2025-03-05 11:03:43 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:03:43 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Started InventroyControllerTest in 7.365 seconds (process running for 9.096)
2025-03-05 11:03:44 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:03:45 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:03:45 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:03:45 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:03:45 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 11:03:45 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 11:03:45 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Donor 'kasiram' added successfully to inventory.
2025-03-05 11:03:46 [SpringApplicationShutdownHook] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Unregistering application INVENTORY-SERVICE with eureka with status DOWN
2025-03-05 11:03:46 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741152826099, current=DOWN, previous=UP]
2025-03-05 11:03:46 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:03:46 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:03:46 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:03:46 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-03-05 11:03:46 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-03-05 11:03:46 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-03-05 11:03:49 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2025-03-05 11:03:49 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - deregister  status: 200
2025-03-05 11:03:49 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-03-05 11:03:56 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - Re-registering apps/INVENTORY-SERVICE
2025-03-05 11:03:56 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:03:56 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:05:25 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 11:06:01 [main] INFO  org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest]: InventroyControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-03-05 11:06:01 [main] INFO  org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.Blood.Inventory_Service.InventoryServiceApplication for test class com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest
2025-03-05 11:06:01 [main] INFO  org.springframework.boot.devtools.restart.RestartApplicationListener - Restart disabled due to context in which it is running
2025-03-05 11:06:02 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Starting InventroyControllerTest using Java 17.0.12 with PID 20468 (started by kasiram.palpandi in C:\Users\kasiram.palpandi\git\repository\BloodBankManagementSystem\Inventory-Service)
2025-03-05 11:06:02 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-03-05 11:06:03 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-05 11:06:03 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 154 ms. Found 2 JPA repository interfaces.
2025-03-05 11:06:03 [main] INFO  org.springframework.cloud.context.scope.GenericScope - BeanFactory id=5c617336-ca48-35fa-acf9-2c540da760b9
2025-03-05 11:06:04 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-05 11:06:04 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.8.Final
2025-03-05 11:06:04 [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-03-05 11:06:04 [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-05 11:06:04 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-05 11:06:04 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@12a9e864
2025-03-05 11:06:04 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-05 11:06:04 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-05 11:06:04 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-03-05 11:06:04 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-05 11:06:05 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-05 11:06:06 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:06:07 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-05 11:06:07 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:06:07 [main] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:06:07 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:06:07 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 3 ms
2025-03-05 11:06:08 [main] INFO  org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-03-05 11:06:08 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-03-05 11:06:08 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-03-05 11:06:08 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-03-05 11:06:08 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 11:06:08 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-03-05 11:06:08 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-03-05 11:06:08 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-03-05 11:06:08 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2025-03-05 11:06:08 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-03-05 11:06:08 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-03-05 11:06:08 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-03-05 11:06:09 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2025-03-05 11:06:09 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-03-05 11:06:09 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-03-05 11:06:09 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1741152969166 with initial instances count: 3
2025-03-05 11:06:09 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Registering application INVENTORY-SERVICE with eureka with status UP
2025-03-05 11:06:09 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741152969172, current=UP, previous=STARTING]
2025-03-05 11:06:09 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:06:09 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Started InventroyControllerTest in 7.362 seconds (process running for 9.31)
2025-03-05 11:06:09 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:06:10 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:06:10 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:06:10 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:06:10 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 11:06:10 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 11:06:10 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Donor 'kasiram' added successfully to inventory.
2025-03-05 11:06:10 [SpringApplicationShutdownHook] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Unregistering application INVENTORY-SERVICE with eureka with status DOWN
2025-03-05 11:06:10 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741152970896, current=DOWN, previous=UP]
2025-03-05 11:06:10 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:06:10 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:06:10 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:06:10 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-03-05 11:06:10 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-03-05 11:06:10 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-03-05 11:06:13 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2025-03-05 11:06:14 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - deregister  status: 200
2025-03-05 11:06:14 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-03-05 11:06:27 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - Re-registering apps/INVENTORY-SERVICE
2025-03-05 11:06:27 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:06:27 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:06:34 [main] INFO  org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest]: InventroyControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-03-05 11:06:34 [main] INFO  org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.Blood.Inventory_Service.InventoryServiceApplication for test class com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest
2025-03-05 11:06:34 [main] INFO  org.springframework.boot.devtools.restart.RestartApplicationListener - Restart disabled due to context in which it is running
2025-03-05 11:06:35 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Starting InventroyControllerTest using Java 17.0.12 with PID 10204 (started by kasiram.palpandi in C:\Users\kasiram.palpandi\git\repository\BloodBankManagementSystem\Inventory-Service)
2025-03-05 11:06:35 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-03-05 11:06:36 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-05 11:06:36 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 148 ms. Found 2 JPA repository interfaces.
2025-03-05 11:06:36 [main] INFO  org.springframework.cloud.context.scope.GenericScope - BeanFactory id=5c617336-ca48-35fa-acf9-2c540da760b9
2025-03-05 11:06:37 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-05 11:06:37 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.8.Final
2025-03-05 11:06:37 [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-03-05 11:06:37 [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-05 11:06:37 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-05 11:06:37 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2079fcfc
2025-03-05 11:06:37 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-05 11:06:37 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-05 11:06:37 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-03-05 11:06:37 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-05 11:06:38 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-05 11:06:38 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:06:39 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-05 11:06:39 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:06:40 [main] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:06:40 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:06:40 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 3 ms
2025-03-05 11:06:40 [main] INFO  org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-03-05 11:06:41 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-03-05 11:06:41 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-03-05 11:06:41 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-03-05 11:06:41 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 11:06:41 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-03-05 11:06:41 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-03-05 11:06:41 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-03-05 11:06:41 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2025-03-05 11:06:41 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-03-05 11:06:41 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-03-05 11:06:41 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-03-05 11:06:41 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2025-03-05 11:06:41 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-03-05 11:06:41 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-03-05 11:06:41 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1741153001870 with initial instances count: 3
2025-03-05 11:06:41 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Registering application INVENTORY-SERVICE with eureka with status UP
2025-03-05 11:06:41 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741153001880, current=UP, previous=STARTING]
2025-03-05 11:06:41 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Started InventroyControllerTest in 7.269 seconds (process running for 9.15)
2025-03-05 11:06:41 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:06:42 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:06:43 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:06:43 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:06:43 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:06:43 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 4 ms
2025-03-05 11:06:43 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 11:06:43 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Donor 'kasiram' added successfully to inventory.
2025-03-05 11:06:43 [SpringApplicationShutdownHook] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Unregistering application INVENTORY-SERVICE with eureka with status DOWN
2025-03-05 11:06:43 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741153003710, current=DOWN, previous=UP]
2025-03-05 11:06:43 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:06:43 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:06:43 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:06:43 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-03-05 11:06:43 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-03-05 11:06:43 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-03-05 11:06:46 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2025-03-05 11:06:46 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - deregister  status: 200
2025-03-05 11:06:46 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-03-05 11:06:57 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - Re-registering apps/INVENTORY-SERVICE
2025-03-05 11:06:57 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:06:57 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:08:18 [main] INFO  org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest]: InventroyControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-03-05 11:08:18 [main] INFO  org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.Blood.Inventory_Service.InventoryServiceApplication for test class com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest
2025-03-05 11:08:18 [main] INFO  org.springframework.boot.devtools.restart.RestartApplicationListener - Restart disabled due to context in which it is running
2025-03-05 11:08:19 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Starting InventroyControllerTest using Java 17.0.12 with PID 2064 (started by kasiram.palpandi in C:\Users\kasiram.palpandi\git\repository\BloodBankManagementSystem\Inventory-Service)
2025-03-05 11:08:19 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-03-05 11:08:20 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-05 11:08:20 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 150 ms. Found 2 JPA repository interfaces.
2025-03-05 11:08:20 [main] INFO  org.springframework.cloud.context.scope.GenericScope - BeanFactory id=5c617336-ca48-35fa-acf9-2c540da760b9
2025-03-05 11:08:21 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-05 11:08:21 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.8.Final
2025-03-05 11:08:21 [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-03-05 11:08:21 [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-05 11:08:21 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-05 11:08:21 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2079fcfc
2025-03-05 11:08:21 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-05 11:08:21 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-05 11:08:21 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-03-05 11:08:21 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-05 11:08:22 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-05 11:08:22 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:08:23 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-05 11:08:23 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:08:24 [main] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:08:24 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:08:24 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 2 ms
2025-03-05 11:08:24 [main] INFO  org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-03-05 11:08:25 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-03-05 11:08:25 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-03-05 11:08:25 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-03-05 11:08:25 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 11:08:25 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-03-05 11:08:25 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-03-05 11:08:25 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-03-05 11:08:25 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2025-03-05 11:08:25 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-03-05 11:08:25 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-03-05 11:08:25 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-03-05 11:08:25 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2025-03-05 11:08:25 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-03-05 11:08:25 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-03-05 11:08:25 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1741153105787 with initial instances count: 3
2025-03-05 11:08:25 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Registering application INVENTORY-SERVICE with eureka with status UP
2025-03-05 11:08:25 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741153105792, current=UP, previous=STARTING]
2025-03-05 11:08:25 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:08:25 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Started InventroyControllerTest in 6.99 seconds (process running for 8.918)
2025-03-05 11:08:25 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:08:26 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:08:26 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:08:26 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:08:26 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 11:08:27 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 11:08:27 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Donor 'kasiram' added successfully to inventory.
2025-03-05 11:08:27 [SpringApplicationShutdownHook] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Unregistering application INVENTORY-SERVICE with eureka with status DOWN
2025-03-05 11:08:27 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741153107560, current=DOWN, previous=UP]
2025-03-05 11:08:27 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:08:27 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:08:27 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:08:27 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-03-05 11:08:27 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-03-05 11:08:27 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-03-05 11:08:30 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2025-03-05 11:08:30 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - deregister  status: 200
2025-03-05 11:08:30 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-03-05 11:08:57 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - Re-registering apps/INVENTORY-SERVICE
2025-03-05 11:08:57 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:08:57 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:09:45 [File Watcher] INFO  org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-03-05 11:09:45 [Thread-1] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Unregistering application INVENTORY-SERVICE with eureka with status DOWN
2025-03-05 11:09:45 [Thread-1] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741153185098, current=DOWN, previous=UP]
2025-03-05 11:09:45 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:09:45 [Thread-1] INFO  org.springframework.boot.web.embedded.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-03-05 11:09:45 [tomcat-shutdown] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8084"]
2025-03-05 11:09:45 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:09:45 [tomcat-shutdown] INFO  org.springframework.boot.web.embedded.tomcat.GracefulShutdown - Graceful shutdown complete
2025-03-05 11:09:45 [Thread-1] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8084"]
2025-03-05 11:09:45 [Thread-1] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:09:45 [Thread-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-03-05 11:09:45 [Thread-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-03-05 11:09:45 [Thread-1] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-03-05 11:09:48 [Thread-1] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2025-03-05 11:09:48 [Thread-1] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - deregister  status: 200
2025-03-05 11:09:48 [Thread-1] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-03-05 11:09:49 [restartedMain] INFO  com.Blood.Inventory_Service.InventoryServiceApplication - Starting InventoryServiceApplication using Java 17.0.12 with PID 17944 (C:\Users\kasiram.palpandi\git\repository\BloodBankManagementSystem\Inventory-Service\target\classes started by kasiram.palpandi in C:\Users\kasiram.palpandi\git\repository\BloodBankManagementSystem\Inventory-Service)
2025-03-05 11:09:49 [restartedMain] INFO  com.Blood.Inventory_Service.InventoryServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-03-05 11:09:49 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-05 11:09:49 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 14 ms. Found 2 JPA repository interfaces.
2025-03-05 11:09:49 [restartedMain] INFO  org.springframework.cloud.context.scope.GenericScope - BeanFactory id=f2f93abc-93bf-3963-82c3-fd5199f6b8dd
2025-03-05 11:09:49 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8084 (http)
2025-03-05 11:09:49 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8084"]
2025-03-05 11:09:49 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-03-05 11:09:49 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.36]
2025-03-05 11:09:49 [restartedMain] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-03-05 11:09:49 [restartedMain] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 614 ms
2025-03-05 11:09:49 [restartedMain] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-05 11:09:49 [restartedMain] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-03-05 11:09:49 [restartedMain] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-05 11:09:49 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-03-05 11:09:49 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection com.mysql.cj.jdbc.ConnectionImpl@18ecf89c
2025-03-05 11:09:49 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-03-05 11:09:49 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-05 11:09:49 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-03-05 11:09:49 [restartedMain] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-2)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-05 11:09:49 [restartedMain] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-05 11:09:49 [restartedMain] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:09:50 [restartedMain] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-05 11:09:50 [restartedMain] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:09:50 [restartedMain] WARN  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2025-03-05 11:09:50 [restartedMain] INFO  org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-03-05 11:09:50 [restartedMain] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-03-05 11:09:50 [restartedMain] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-03-05 11:09:50 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-03-05 11:09:50 [restartedMain] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 11:09:50 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-03-05 11:09:50 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-03-05 11:09:50 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-03-05 11:09:50 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2025-03-05 11:09:50 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-03-05 11:09:50 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-03-05 11:09:50 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-03-05 11:09:50 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2025-03-05 11:09:50 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-03-05 11:09:50 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-03-05 11:09:50 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1741153190729 with initial instances count: 3
2025-03-05 11:09:50 [restartedMain] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Registering application INVENTORY-SERVICE with eureka with status UP
2025-03-05 11:09:50 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741153190731, current=UP, previous=STARTING]
2025-03-05 11:09:50 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8084"]
2025-03-05 11:09:50 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8084 (http) with context path '/'
2025-03-05 11:09:50 [restartedMain] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration - Updating port to 8084
2025-03-05 11:09:50 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:09:50 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:09:51 [restartedMain] INFO  com.Blood.Inventory_Service.InventoryServiceApplication - Started InventoryServiceApplication in 2.368 seconds (process running for 1174.635)
2025-03-05 11:09:51 [restartedMain] INFO  org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-03-05 11:09:51 [File Watcher] INFO  org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-03-05 11:09:51 [Thread-7] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Unregistering application INVENTORY-SERVICE with eureka with status DOWN
2025-03-05 11:09:51 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741153191574, current=DOWN, previous=UP]
2025-03-05 11:09:51 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:09:51 [Thread-7] INFO  org.springframework.boot.web.embedded.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-03-05 11:09:51 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:09:51 [tomcat-shutdown] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8084"]
2025-03-05 11:09:51 [tomcat-shutdown] INFO  org.springframework.boot.web.embedded.tomcat.GracefulShutdown - Graceful shutdown complete
2025-03-05 11:09:51 [Thread-7] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8084"]
2025-03-05 11:09:51 [Thread-7] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:09:51 [Thread-7] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-03-05 11:09:51 [Thread-7] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-03-05 11:09:51 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-03-05 11:09:54 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2025-03-05 11:09:54 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - deregister  status: 200
2025-03-05 11:09:54 [Thread-7] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-03-05 11:09:55 [restartedMain] INFO  com.Blood.Inventory_Service.InventoryServiceApplication - Starting InventoryServiceApplication using Java 17.0.12 with PID 17944 (C:\Users\kasiram.palpandi\git\repository\BloodBankManagementSystem\Inventory-Service\target\classes started by kasiram.palpandi in C:\Users\kasiram.palpandi\git\repository\BloodBankManagementSystem\Inventory-Service)
2025-03-05 11:09:55 [restartedMain] INFO  com.Blood.Inventory_Service.InventoryServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-03-05 11:09:55 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-05 11:09:55 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 2 JPA repository interfaces.
2025-03-05 11:09:55 [restartedMain] INFO  org.springframework.cloud.context.scope.GenericScope - BeanFactory id=f2f93abc-93bf-3963-82c3-fd5199f6b8dd
2025-03-05 11:09:55 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8084 (http)
2025-03-05 11:09:55 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8084"]
2025-03-05 11:09:55 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-03-05 11:09:55 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.36]
2025-03-05 11:09:55 [restartedMain] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-03-05 11:09:55 [restartedMain] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 473 ms
2025-03-05 11:09:55 [restartedMain] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-05 11:09:55 [restartedMain] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-03-05 11:09:55 [restartedMain] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-05 11:09:55 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Starting...
2025-03-05 11:09:55 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-3 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2b5493e5
2025-03-05 11:09:55 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Start completed.
2025-03-05 11:09:55 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-05 11:09:55 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-03-05 11:09:55 [restartedMain] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-3)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-05 11:09:55 [restartedMain] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-05 11:09:55 [restartedMain] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:09:55 [restartedMain] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-05 11:09:55 [restartedMain] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:09:55 [restartedMain] WARN  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2025-03-05 11:09:56 [restartedMain] INFO  org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-03-05 11:09:56 [restartedMain] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-03-05 11:09:56 [restartedMain] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-03-05 11:09:56 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-03-05 11:09:56 [restartedMain] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 11:09:56 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-03-05 11:09:56 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-03-05 11:09:56 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-03-05 11:09:56 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2025-03-05 11:09:56 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-03-05 11:09:56 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-03-05 11:09:56 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-03-05 11:09:56 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2025-03-05 11:09:56 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-03-05 11:09:56 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-03-05 11:09:56 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1741153196430 with initial instances count: 3
2025-03-05 11:09:56 [restartedMain] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Registering application INVENTORY-SERVICE with eureka with status UP
2025-03-05 11:09:56 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741153196432, current=UP, previous=STARTING]
2025-03-05 11:09:56 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8084"]
2025-03-05 11:09:56 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:09:56 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8084 (http) with context path '/'
2025-03-05 11:09:56 [restartedMain] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration - Updating port to 8084
2025-03-05 11:09:56 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:09:56 [restartedMain] INFO  com.Blood.Inventory_Service.InventoryServiceApplication - Started InventoryServiceApplication in 1.812 seconds (process running for 1180.304)
2025-03-05 11:09:56 [restartedMain] INFO  org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-03-05 11:10:25 [main] INFO  org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest]: InventroyControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-03-05 11:10:25 [main] INFO  org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.Blood.Inventory_Service.InventoryServiceApplication for test class com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest
2025-03-05 11:10:25 [main] INFO  org.springframework.boot.devtools.restart.RestartApplicationListener - Restart disabled due to context in which it is running
2025-03-05 11:10:25 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Starting InventroyControllerTest using Java 17.0.12 with PID 18696 (started by kasiram.palpandi in C:\Users\kasiram.palpandi\git\repository\BloodBankManagementSystem\Inventory-Service)
2025-03-05 11:10:25 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-03-05 11:10:26 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-05 11:10:27 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 144 ms. Found 2 JPA repository interfaces.
2025-03-05 11:10:27 [main] INFO  org.springframework.cloud.context.scope.GenericScope - BeanFactory id=5c617336-ca48-35fa-acf9-2c540da760b9
2025-03-05 11:10:28 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-05 11:10:28 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.8.Final
2025-03-05 11:10:28 [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-03-05 11:10:28 [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-05 11:10:28 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-05 11:10:28 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@19e5e110
2025-03-05 11:10:28 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-05 11:10:28 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-05 11:10:28 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-03-05 11:10:28 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-05 11:10:29 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-05 11:10:29 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:10:30 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-05 11:10:30 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:10:31 [main] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:10:31 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:10:31 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 4 ms
2025-03-05 11:10:31 [main] INFO  org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-03-05 11:10:32 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-03-05 11:10:32 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-03-05 11:10:32 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-03-05 11:10:32 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 11:10:32 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-03-05 11:10:32 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-03-05 11:10:32 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-03-05 11:10:32 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2025-03-05 11:10:32 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-03-05 11:10:32 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-03-05 11:10:32 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-03-05 11:10:32 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2025-03-05 11:10:32 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-03-05 11:10:32 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-03-05 11:10:32 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1741153232593 with initial instances count: 3
2025-03-05 11:10:32 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Registering application INVENTORY-SERVICE with eureka with status UP
2025-03-05 11:10:32 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741153232600, current=UP, previous=STARTING]
2025-03-05 11:10:32 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:10:32 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Started InventroyControllerTest in 7.176 seconds (process running for 9.012)
2025-03-05 11:10:32 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:10:34 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:10:34 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:10:34 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:10:34 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 11:10:34 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 11:10:34 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Donor 'kasiram' added successfully to inventory.
2025-03-05 11:10:34 [SpringApplicationShutdownHook] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Unregistering application INVENTORY-SERVICE with eureka with status DOWN
2025-03-05 11:10:34 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741153234710, current=DOWN, previous=UP]
2025-03-05 11:10:34 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:10:34 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:10:34 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:10:34 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-03-05 11:10:34 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-03-05 11:10:34 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-03-05 11:10:37 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2025-03-05 11:10:37 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - deregister  status: 200
2025-03-05 11:10:37 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-03-05 11:10:56 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - Re-registering apps/INVENTORY-SERVICE
2025-03-05 11:10:56 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:10:56 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:10:59 [main] INFO  org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest]: InventroyControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-03-05 11:10:59 [main] INFO  org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.Blood.Inventory_Service.InventoryServiceApplication for test class com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest
2025-03-05 11:10:59 [main] INFO  org.springframework.boot.devtools.restart.RestartApplicationListener - Restart disabled due to context in which it is running
2025-03-05 11:11:00 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Starting InventroyControllerTest using Java 17.0.12 with PID 13344 (started by kasiram.palpandi in C:\Users\kasiram.palpandi\git\repository\BloodBankManagementSystem\Inventory-Service)
2025-03-05 11:11:00 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-03-05 11:11:01 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-05 11:11:01 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 147 ms. Found 2 JPA repository interfaces.
2025-03-05 11:11:01 [main] INFO  org.springframework.cloud.context.scope.GenericScope - BeanFactory id=5c617336-ca48-35fa-acf9-2c540da760b9
2025-03-05 11:11:02 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-05 11:11:02 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.8.Final
2025-03-05 11:11:02 [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-03-05 11:11:02 [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-05 11:11:03 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-05 11:11:03 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@24f2608b
2025-03-05 11:11:03 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-05 11:11:03 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-05 11:11:03 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-03-05 11:11:03 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-05 11:11:04 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-05 11:11:04 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:11:04 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-05 11:11:05 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:11:05 [main] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:11:05 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:11:05 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 2 ms
2025-03-05 11:11:06 [main] INFO  org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-03-05 11:11:06 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-03-05 11:11:06 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-03-05 11:11:06 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-03-05 11:11:06 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 11:11:06 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-03-05 11:11:06 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-03-05 11:11:06 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-03-05 11:11:06 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2025-03-05 11:11:06 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-03-05 11:11:06 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-03-05 11:11:06 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-03-05 11:11:07 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2025-03-05 11:11:07 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-03-05 11:11:07 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-03-05 11:11:07 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1741153267058 with initial instances count: 3
2025-03-05 11:11:07 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Registering application INVENTORY-SERVICE with eureka with status UP
2025-03-05 11:11:07 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741153267062, current=UP, previous=STARTING]
2025-03-05 11:11:07 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:11:07 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Started InventroyControllerTest in 7.113 seconds (process running for 8.937)
2025-03-05 11:11:07 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:11:08 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:11:08 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:11:08 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:11:08 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 2 ms
2025-03-05 11:11:08 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 11:11:08 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Donor 'kasiram' added successfully to inventory.
2025-03-05 11:11:09 [SpringApplicationShutdownHook] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Unregistering application INVENTORY-SERVICE with eureka with status DOWN
2025-03-05 11:11:09 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741153269023, current=DOWN, previous=UP]
2025-03-05 11:11:09 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:11:09 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:11:09 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:11:09 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-03-05 11:11:09 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-03-05 11:11:09 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-03-05 11:11:12 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2025-03-05 11:11:12 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - deregister  status: 200
2025-03-05 11:11:12 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-03-05 11:11:26 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - Re-registering apps/INVENTORY-SERVICE
2025-03-05 11:11:26 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:11:26 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:14:56 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 11:15:51 [main] INFO  org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest]: InventroyControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-03-05 11:15:51 [main] INFO  org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.Blood.Inventory_Service.InventoryServiceApplication for test class com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest
2025-03-05 11:15:51 [main] INFO  org.springframework.boot.devtools.restart.RestartApplicationListener - Restart disabled due to context in which it is running
2025-03-05 11:15:52 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Starting InventroyControllerTest using Java 17.0.12 with PID 21580 (started by kasiram.palpandi in C:\Users\kasiram.palpandi\git\repository\BloodBankManagementSystem\Inventory-Service)
2025-03-05 11:15:52 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-03-05 11:15:53 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-05 11:15:53 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 169 ms. Found 2 JPA repository interfaces.
2025-03-05 11:15:53 [main] INFO  org.springframework.cloud.context.scope.GenericScope - BeanFactory id=5c617336-ca48-35fa-acf9-2c540da760b9
2025-03-05 11:15:54 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-05 11:15:54 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.8.Final
2025-03-05 11:15:54 [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-03-05 11:15:54 [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-05 11:15:54 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-05 11:15:54 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@24f2608b
2025-03-05 11:15:54 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-05 11:15:54 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-05 11:15:54 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-03-05 11:15:54 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-05 11:15:55 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-05 11:15:55 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:15:56 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-05 11:15:56 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:15:57 [main] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:15:57 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:15:57 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 2 ms
2025-03-05 11:15:57 [main] INFO  org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-03-05 11:15:58 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-03-05 11:15:58 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-03-05 11:15:58 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-03-05 11:15:58 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 11:15:58 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-03-05 11:15:58 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-03-05 11:15:58 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-03-05 11:15:58 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2025-03-05 11:15:58 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-03-05 11:15:58 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-03-05 11:15:58 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-03-05 11:15:58 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2025-03-05 11:15:58 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-03-05 11:15:58 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-03-05 11:15:58 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1741153558876 with initial instances count: 3
2025-03-05 11:15:58 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Registering application INVENTORY-SERVICE with eureka with status UP
2025-03-05 11:15:58 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741153558883, current=UP, previous=STARTING]
2025-03-05 11:15:58 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:15:58 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Started InventroyControllerTest in 7.263 seconds (process running for 9.147)
2025-03-05 11:15:58 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:16:00 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:16:00 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:16:00 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:16:00 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 11:16:00 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 11:16:00 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: USER
2025-03-05 11:16:00 [SpringApplicationShutdownHook] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Unregistering application INVENTORY-SERVICE with eureka with status DOWN
2025-03-05 11:16:00 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741153560778, current=DOWN, previous=UP]
2025-03-05 11:16:00 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:16:00 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:16:00 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:16:00 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-03-05 11:16:00 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-03-05 11:16:00 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-03-05 11:16:03 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2025-03-05 11:16:03 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - deregister  status: 200
2025-03-05 11:16:03 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-03-05 11:16:26 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - Re-registering apps/INVENTORY-SERVICE
2025-03-05 11:16:26 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:16:26 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:19:56 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 11:20:46 [main] INFO  org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest]: InventroyControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-03-05 11:20:46 [main] INFO  org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.Blood.Inventory_Service.InventoryServiceApplication for test class com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest
2025-03-05 11:20:46 [main] INFO  org.springframework.boot.devtools.restart.RestartApplicationListener - Restart disabled due to context in which it is running
2025-03-05 11:20:47 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Starting InventroyControllerTest using Java 17.0.12 with PID 10964 (started by kasiram.palpandi in C:\Users\kasiram.palpandi\git\repository\BloodBankManagementSystem\Inventory-Service)
2025-03-05 11:20:47 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-03-05 11:20:48 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-05 11:20:48 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 153 ms. Found 2 JPA repository interfaces.
2025-03-05 11:20:48 [main] INFO  org.springframework.cloud.context.scope.GenericScope - BeanFactory id=5c617336-ca48-35fa-acf9-2c540da760b9
2025-03-05 11:20:49 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-05 11:20:49 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.8.Final
2025-03-05 11:20:49 [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-03-05 11:20:49 [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-05 11:20:49 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-05 11:20:49 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@55c20a91
2025-03-05 11:20:49 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-05 11:20:49 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-05 11:20:49 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-03-05 11:20:49 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-05 11:20:50 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-05 11:20:50 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:20:51 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-05 11:20:51 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:20:52 [main] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:20:52 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:20:52 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 2 ms
2025-03-05 11:20:53 [main] INFO  org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-03-05 11:20:53 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-03-05 11:20:53 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-03-05 11:20:53 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-03-05 11:20:53 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 11:20:53 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-03-05 11:20:53 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-03-05 11:20:53 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-03-05 11:20:53 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2025-03-05 11:20:53 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-03-05 11:20:53 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-03-05 11:20:53 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-03-05 11:20:54 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2025-03-05 11:20:54 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-03-05 11:20:54 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-03-05 11:20:54 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1741153854086 with initial instances count: 3
2025-03-05 11:20:54 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Registering application INVENTORY-SERVICE with eureka with status UP
2025-03-05 11:20:54 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741153854092, current=UP, previous=STARTING]
2025-03-05 11:20:54 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:20:54 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Started InventroyControllerTest in 7.339 seconds (process running for 9.073)
2025-03-05 11:20:54 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:20:55 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:20:55 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:20:55 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:20:55 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 11:20:55 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 11:20:55 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: USER
2025-03-05 11:20:55 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:20:56 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:20:56 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:20:56 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:20:56 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 11:20:56 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: USER
2025-03-05 11:20:56 [SpringApplicationShutdownHook] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Unregistering application INVENTORY-SERVICE with eureka with status DOWN
2025-03-05 11:20:56 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741153856169, current=DOWN, previous=UP]
2025-03-05 11:20:56 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:20:56 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:20:56 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:20:56 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-03-05 11:20:56 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-03-05 11:20:56 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-03-05 11:20:59 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2025-03-05 11:20:59 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - deregister  status: 200
2025-03-05 11:20:59 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-03-05 11:21:12 [main] INFO  org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest]: InventroyControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-03-05 11:21:12 [main] INFO  org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.Blood.Inventory_Service.InventoryServiceApplication for test class com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest
2025-03-05 11:21:13 [main] INFO  org.springframework.boot.devtools.restart.RestartApplicationListener - Restart disabled due to context in which it is running
2025-03-05 11:21:13 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Starting InventroyControllerTest using Java 17.0.12 with PID 14200 (started by kasiram.palpandi in C:\Users\kasiram.palpandi\git\repository\BloodBankManagementSystem\Inventory-Service)
2025-03-05 11:21:13 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-03-05 11:21:14 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-05 11:21:15 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 142 ms. Found 2 JPA repository interfaces.
2025-03-05 11:21:15 [main] INFO  org.springframework.cloud.context.scope.GenericScope - BeanFactory id=5c617336-ca48-35fa-acf9-2c540da760b9
2025-03-05 11:21:15 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-05 11:21:15 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.8.Final
2025-03-05 11:21:15 [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-03-05 11:21:16 [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-05 11:21:16 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-05 11:21:16 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@70d7a49b
2025-03-05 11:21:16 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-05 11:21:16 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-05 11:21:16 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-03-05 11:21:16 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-05 11:21:17 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-05 11:21:17 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:21:18 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-05 11:21:18 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:21:18 [main] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:21:18 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:21:19 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 11:21:19 [main] INFO  org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-03-05 11:21:19 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-03-05 11:21:19 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-03-05 11:21:19 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-03-05 11:21:19 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 11:21:19 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-03-05 11:21:19 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-03-05 11:21:19 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-03-05 11:21:19 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2025-03-05 11:21:19 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-03-05 11:21:19 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-03-05 11:21:19 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-03-05 11:21:20 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2025-03-05 11:21:20 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-03-05 11:21:20 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-03-05 11:21:20 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1741153880437 with initial instances count: 2
2025-03-05 11:21:20 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Registering application INVENTORY-SERVICE with eureka with status UP
2025-03-05 11:21:20 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741153880444, current=UP, previous=STARTING]
2025-03-05 11:21:20 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:21:20 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Started InventroyControllerTest in 7.328 seconds (process running for 9.088)
2025-03-05 11:21:20 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:21:21 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:21:22 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:21:22 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:21:22 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:21:22 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 11:21:22 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: USER
2025-03-05 11:21:22 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:21:22 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:21:22 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:21:22 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:21:22 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 11:21:22 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Donor 'kasiram' added successfully to inventory.
2025-03-05 11:21:22 [SpringApplicationShutdownHook] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Unregistering application INVENTORY-SERVICE with eureka with status DOWN
2025-03-05 11:21:22 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741153882535, current=DOWN, previous=UP]
2025-03-05 11:21:22 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:21:22 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:21:22 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:21:22 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-03-05 11:21:22 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-03-05 11:21:22 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-03-05 11:21:25 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2025-03-05 11:21:25 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - deregister  status: 200
2025-03-05 11:21:25 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-03-05 11:21:27 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - Re-registering apps/INVENTORY-SERVICE
2025-03-05 11:21:27 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:21:27 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:24:56 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 11:29:56 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 11:33:36 [main] INFO  org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest]: InventroyControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-03-05 11:33:36 [main] INFO  org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.Blood.Inventory_Service.InventoryServiceApplication for test class com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest
2025-03-05 11:33:36 [main] INFO  org.springframework.boot.devtools.restart.RestartApplicationListener - Restart disabled due to context in which it is running
2025-03-05 11:33:37 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Starting InventroyControllerTest using Java 17.0.12 with PID 5284 (started by kasiram.palpandi in C:\Users\kasiram.palpandi\git\repository\BloodBankManagementSystem\Inventory-Service)
2025-03-05 11:33:37 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-03-05 11:33:38 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-05 11:33:38 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 143 ms. Found 2 JPA repository interfaces.
2025-03-05 11:33:38 [main] INFO  org.springframework.cloud.context.scope.GenericScope - BeanFactory id=5c617336-ca48-35fa-acf9-2c540da760b9
2025-03-05 11:33:39 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-05 11:33:39 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.8.Final
2025-03-05 11:33:39 [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-03-05 11:33:39 [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-05 11:33:39 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-05 11:33:39 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@70d7a49b
2025-03-05 11:33:39 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-05 11:33:39 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-05 11:33:39 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-03-05 11:33:39 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-05 11:33:40 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-05 11:33:40 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:33:41 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-05 11:33:41 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:33:42 [main] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:33:42 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:33:42 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 3 ms
2025-03-05 11:33:43 [main] INFO  org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-03-05 11:33:43 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-03-05 11:33:43 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-03-05 11:33:43 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-03-05 11:33:43 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 11:33:43 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-03-05 11:33:43 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-03-05 11:33:43 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-03-05 11:33:43 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2025-03-05 11:33:43 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-03-05 11:33:43 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-03-05 11:33:43 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-03-05 11:33:44 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2025-03-05 11:33:44 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-03-05 11:33:44 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-03-05 11:33:44 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1741154624015 with initial instances count: 3
2025-03-05 11:33:44 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Registering application INVENTORY-SERVICE with eureka with status UP
2025-03-05 11:33:44 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741154624019, current=UP, previous=STARTING]
2025-03-05 11:33:44 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:33:44 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:33:44 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Started InventroyControllerTest in 7.281 seconds (process running for 9.231)
2025-03-05 11:33:45 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:33:45 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:33:45 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:33:45 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 11:33:45 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 11:33:45 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: USER
2025-03-05 11:33:45 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:33:45 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:33:45 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:33:45 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 11:33:45 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 11:33:45 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning 2 donors from inventory.
2025-03-05 11:33:45 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:33:45 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:33:46 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:33:46 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 11:33:46 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 11:33:46 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Donor 'kasiram' added successfully to inventory.
2025-03-05 11:33:46 [SpringApplicationShutdownHook] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Unregistering application INVENTORY-SERVICE with eureka with status DOWN
2025-03-05 11:33:46 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741154626055, current=DOWN, previous=UP]
2025-03-05 11:33:46 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:33:46 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:33:46 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:33:46 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-03-05 11:33:46 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-03-05 11:33:46 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-03-05 11:33:49 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2025-03-05 11:33:49 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - deregister  status: 200
2025-03-05 11:33:49 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-03-05 11:33:57 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - Re-registering apps/INVENTORY-SERVICE
2025-03-05 11:33:57 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:33:57 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:34:56 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 11:35:20 [main] INFO  org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest]: InventroyControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-03-05 11:35:20 [main] INFO  org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.Blood.Inventory_Service.InventoryServiceApplication for test class com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest
2025-03-05 11:35:21 [main] INFO  org.springframework.boot.devtools.restart.RestartApplicationListener - Restart disabled due to context in which it is running
2025-03-05 11:35:21 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Starting InventroyControllerTest using Java 17.0.12 with PID 22032 (started by kasiram.palpandi in C:\Users\kasiram.palpandi\git\repository\BloodBankManagementSystem\Inventory-Service)
2025-03-05 11:35:21 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-03-05 11:35:22 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-05 11:35:22 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 189 ms. Found 2 JPA repository interfaces.
2025-03-05 11:35:23 [main] INFO  org.springframework.cloud.context.scope.GenericScope - BeanFactory id=5c617336-ca48-35fa-acf9-2c540da760b9
2025-03-05 11:35:23 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-05 11:35:23 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.8.Final
2025-03-05 11:35:23 [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-03-05 11:35:24 [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-05 11:35:24 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-05 11:35:24 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6cf3b3d7
2025-03-05 11:35:24 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-05 11:35:24 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-05 11:35:24 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-03-05 11:35:24 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-05 11:35:25 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-05 11:35:25 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:35:26 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-05 11:35:26 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:35:27 [main] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:35:27 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:35:27 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 3 ms
2025-03-05 11:35:27 [main] INFO  org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-03-05 11:35:27 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-03-05 11:35:27 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-03-05 11:35:27 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-03-05 11:35:27 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 11:35:27 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-03-05 11:35:27 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-03-05 11:35:27 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-03-05 11:35:27 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2025-03-05 11:35:27 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-03-05 11:35:27 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-03-05 11:35:27 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-03-05 11:35:28 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2025-03-05 11:35:28 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-03-05 11:35:28 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-03-05 11:35:28 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1741154728325 with initial instances count: 3
2025-03-05 11:35:28 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Registering application INVENTORY-SERVICE with eureka with status UP
2025-03-05 11:35:28 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741154728331, current=UP, previous=STARTING]
2025-03-05 11:35:28 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:35:28 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Started InventroyControllerTest in 7.052 seconds (process running for 9.092)
2025-03-05 11:35:28 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:35:29 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:35:29 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:35:29 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:35:29 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:35:29 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 11:35:29 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: USER
2025-03-05 11:35:29 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:35:29 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:35:29 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:35:29 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:35:29 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 11:35:29 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning 2 donors from inventory.
2025-03-05 11:35:30 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:35:30 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:35:30 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:35:30 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:35:30 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 11:35:30 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning 2 donors from inventory.
2025-03-05 11:35:30 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:35:30 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:35:30 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:35:30 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:35:30 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 11:35:30 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Donor 'kasiram' added successfully to inventory.
2025-03-05 11:35:30 [SpringApplicationShutdownHook] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Unregistering application INVENTORY-SERVICE with eureka with status DOWN
2025-03-05 11:35:30 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741154730380, current=DOWN, previous=UP]
2025-03-05 11:35:30 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:35:30 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:35:30 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:35:30 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-03-05 11:35:30 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-03-05 11:35:30 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-03-05 11:35:33 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2025-03-05 11:35:33 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - deregister  status: 200
2025-03-05 11:35:33 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-03-05 11:35:57 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - Re-registering apps/INVENTORY-SERVICE
2025-03-05 11:35:57 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:35:57 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:36:12 [main] INFO  org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest]: InventroyControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-03-05 11:36:12 [main] INFO  org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.Blood.Inventory_Service.InventoryServiceApplication for test class com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest
2025-03-05 11:36:13 [main] INFO  org.springframework.boot.devtools.restart.RestartApplicationListener - Restart disabled due to context in which it is running
2025-03-05 11:36:13 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Starting InventroyControllerTest using Java 17.0.12 with PID 18636 (started by kasiram.palpandi in C:\Users\kasiram.palpandi\git\repository\BloodBankManagementSystem\Inventory-Service)
2025-03-05 11:36:13 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-03-05 11:36:14 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-05 11:36:14 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 148 ms. Found 2 JPA repository interfaces.
2025-03-05 11:36:15 [main] INFO  org.springframework.cloud.context.scope.GenericScope - BeanFactory id=5c617336-ca48-35fa-acf9-2c540da760b9
2025-03-05 11:36:15 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-05 11:36:15 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.8.Final
2025-03-05 11:36:15 [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-03-05 11:36:16 [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-05 11:36:16 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-05 11:36:16 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@56193e3a
2025-03-05 11:36:16 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-05 11:36:16 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-05 11:36:16 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-03-05 11:36:16 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-05 11:36:17 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-05 11:36:17 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:36:18 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-05 11:36:18 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:36:18 [main] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:36:18 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:36:18 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 2 ms
2025-03-05 11:36:19 [main] INFO  org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-03-05 11:36:19 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-03-05 11:36:19 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-03-05 11:36:19 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-03-05 11:36:19 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 11:36:19 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-03-05 11:36:19 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-03-05 11:36:19 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-03-05 11:36:19 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2025-03-05 11:36:19 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-03-05 11:36:19 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-03-05 11:36:19 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-03-05 11:36:20 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2025-03-05 11:36:20 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-03-05 11:36:20 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-03-05 11:36:20 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1741154780172 with initial instances count: 3
2025-03-05 11:36:20 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Registering application INVENTORY-SERVICE with eureka with status UP
2025-03-05 11:36:20 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741154780180, current=UP, previous=STARTING]
2025-03-05 11:36:20 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:36:20 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Started InventroyControllerTest in 7.02 seconds (process running for 8.702)
2025-03-05 11:36:20 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:36:21 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:36:22 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:36:22 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:36:22 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:36:22 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 11:36:22 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: USER
2025-03-05 11:36:22 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:36:22 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:36:22 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:36:22 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 2 ms
2025-03-05 11:36:22 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 11:36:22 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning 2 donors from inventory.
2025-03-05 11:36:22 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:36:22 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:36:22 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:36:22 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:36:22 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 11:36:22 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning 2 donors from inventory.
2025-03-05 11:36:22 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:36:22 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:36:22 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:36:22 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:36:22 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 11:36:22 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 11:36:22 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:36:22 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:36:22 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:36:22 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:36:22 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 11:36:22 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Donor 'kasiram' added successfully to inventory.
2025-03-05 11:36:22 [SpringApplicationShutdownHook] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Unregistering application INVENTORY-SERVICE with eureka with status DOWN
2025-03-05 11:36:22 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741154782671, current=DOWN, previous=UP]
2025-03-05 11:36:22 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:36:22 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:36:22 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:36:22 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-03-05 11:36:22 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-03-05 11:36:22 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-03-05 11:36:25 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2025-03-05 11:36:25 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - deregister  status: 200
2025-03-05 11:36:25 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-03-05 11:36:27 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - Re-registering apps/INVENTORY-SERVICE
2025-03-05 11:36:27 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:36:27 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:38:24 [main] INFO  org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest]: InventroyControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-03-05 11:38:24 [main] INFO  org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.Blood.Inventory_Service.InventoryServiceApplication for test class com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest
2025-03-05 11:38:24 [main] INFO  org.springframework.boot.devtools.restart.RestartApplicationListener - Restart disabled due to context in which it is running
2025-03-05 11:38:24 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Starting InventroyControllerTest using Java 17.0.12 with PID 13992 (started by kasiram.palpandi in C:\Users\kasiram.palpandi\git\repository\BloodBankManagementSystem\Inventory-Service)
2025-03-05 11:38:24 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-03-05 11:38:26 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-05 11:38:26 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 138 ms. Found 2 JPA repository interfaces.
2025-03-05 11:38:26 [main] INFO  org.springframework.cloud.context.scope.GenericScope - BeanFactory id=5c617336-ca48-35fa-acf9-2c540da760b9
2025-03-05 11:38:27 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-05 11:38:27 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.8.Final
2025-03-05 11:38:27 [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-03-05 11:38:27 [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-05 11:38:27 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-05 11:38:27 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@788d9139
2025-03-05 11:38:27 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-05 11:38:27 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-05 11:38:27 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-03-05 11:38:27 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-05 11:38:28 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-05 11:38:28 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:38:30 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-05 11:38:30 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:38:30 [main] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:38:30 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:38:30 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 3 ms
2025-03-05 11:38:31 [main] INFO  org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-03-05 11:38:31 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-03-05 11:38:31 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-03-05 11:38:31 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-03-05 11:38:31 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 11:38:31 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-03-05 11:38:31 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-03-05 11:38:31 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-03-05 11:38:31 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2025-03-05 11:38:31 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-03-05 11:38:31 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-03-05 11:38:31 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-03-05 11:38:32 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2025-03-05 11:38:32 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-03-05 11:38:32 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-03-05 11:38:32 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1741154912307 with initial instances count: 3
2025-03-05 11:38:32 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Registering application INVENTORY-SERVICE with eureka with status UP
2025-03-05 11:38:32 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741154912318, current=UP, previous=STARTING]
2025-03-05 11:38:32 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:38:32 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Started InventroyControllerTest in 7.848 seconds (process running for 9.687)
2025-03-05 11:38:32 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:38:33 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:38:33 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:38:33 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:38:33 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 2 ms
2025-03-05 11:38:33 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 11:38:33 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: USER
2025-03-05 11:38:33 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:38:33 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:38:33 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:38:33 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 2 ms
2025-03-05 11:38:33 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 11:38:34 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning 2 donors from inventory.
2025-03-05 11:38:34 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:38:34 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:38:34 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:38:34 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:38:34 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 11:38:34 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning 2 donors from inventory.
2025-03-05 11:38:34 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:38:34 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:38:34 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:38:34 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:38:34 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 11:38:34 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 11:38:34 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:38:34 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:38:34 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:38:34 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 11:38:34 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 11:38:34 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count details.
2025-03-05 11:38:34 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:38:34 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:38:34 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:38:34 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:38:34 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 11:38:34 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Donor 'kasiram' added successfully to inventory.
2025-03-05 11:38:34 [SpringApplicationShutdownHook] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Unregistering application INVENTORY-SERVICE with eureka with status DOWN
2025-03-05 11:38:34 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741154914262, current=DOWN, previous=UP]
2025-03-05 11:38:34 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:38:34 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:38:34 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:38:34 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-03-05 11:38:34 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-03-05 11:38:34 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-03-05 11:38:37 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2025-03-05 11:38:37 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - deregister  status: 200
2025-03-05 11:38:37 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-03-05 11:38:58 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - Re-registering apps/INVENTORY-SERVICE
2025-03-05 11:38:58 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:38:58 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:39:06 [main] INFO  org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest]: InventroyControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-03-05 11:39:06 [main] INFO  org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.Blood.Inventory_Service.InventoryServiceApplication for test class com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest
2025-03-05 11:39:07 [main] INFO  org.springframework.boot.devtools.restart.RestartApplicationListener - Restart disabled due to context in which it is running
2025-03-05 11:39:07 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Starting InventroyControllerTest using Java 17.0.12 with PID 15460 (started by kasiram.palpandi in C:\Users\kasiram.palpandi\git\repository\BloodBankManagementSystem\Inventory-Service)
2025-03-05 11:39:07 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-03-05 11:39:08 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-05 11:39:08 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 158 ms. Found 2 JPA repository interfaces.
2025-03-05 11:39:08 [main] INFO  org.springframework.cloud.context.scope.GenericScope - BeanFactory id=5c617336-ca48-35fa-acf9-2c540da760b9
2025-03-05 11:39:09 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-05 11:39:09 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.8.Final
2025-03-05 11:39:09 [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-03-05 11:39:09 [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-05 11:39:09 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-05 11:39:09 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@41289e88
2025-03-05 11:39:09 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-05 11:39:10 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-05 11:39:10 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-03-05 11:39:10 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-05 11:39:10 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-05 11:39:10 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:39:11 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-05 11:39:11 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:39:12 [main] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:39:12 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:39:12 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 3 ms
2025-03-05 11:39:12 [main] INFO  org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-03-05 11:39:13 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-03-05 11:39:13 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-03-05 11:39:13 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-03-05 11:39:13 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 11:39:13 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-03-05 11:39:13 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-03-05 11:39:13 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-03-05 11:39:13 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2025-03-05 11:39:13 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-03-05 11:39:13 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-03-05 11:39:13 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-03-05 11:39:13 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2025-03-05 11:39:13 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-03-05 11:39:13 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-03-05 11:39:13 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1741154953887 with initial instances count: 3
2025-03-05 11:39:13 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Registering application INVENTORY-SERVICE with eureka with status UP
2025-03-05 11:39:13 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741154953894, current=UP, previous=STARTING]
2025-03-05 11:39:13 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:39:13 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Started InventroyControllerTest in 6.933 seconds (process running for 8.699)
2025-03-05 11:39:14 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:39:15 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:39:15 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:39:15 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:39:15 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 11:39:15 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 11:39:15 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: USER
2025-03-05 11:39:15 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:39:15 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:39:15 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:39:15 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:39:15 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 11:39:15 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning 2 donors from inventory.
2025-03-05 11:39:15 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:39:15 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:39:15 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:39:15 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:39:15 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 11:39:15 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning 2 donors from inventory.
2025-03-05 11:39:15 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:39:15 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:39:15 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:39:15 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:39:15 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 11:39:15 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 11:39:15 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:39:15 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:39:15 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:39:15 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:39:15 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 11:39:15 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count details.
2025-03-05 11:39:15 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:39:15 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:39:15 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:39:15 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:39:15 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 11:39:15 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Donor 'kasiram' added successfully to inventory.
2025-03-05 11:39:15 [SpringApplicationShutdownHook] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Unregistering application INVENTORY-SERVICE with eureka with status DOWN
2025-03-05 11:39:15 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741154955625, current=DOWN, previous=UP]
2025-03-05 11:39:15 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:39:15 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:39:15 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:39:15 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-03-05 11:39:15 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-03-05 11:39:15 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-03-05 11:39:18 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2025-03-05 11:39:18 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - deregister  status: 200
2025-03-05 11:39:18 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-03-05 11:39:28 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - Re-registering apps/INVENTORY-SERVICE
2025-03-05 11:39:28 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:39:28 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:39:56 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 11:40:48 [main] INFO  org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest]: InventroyControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-03-05 11:40:48 [main] INFO  org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.Blood.Inventory_Service.InventoryServiceApplication for test class com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest
2025-03-05 11:40:49 [main] INFO  org.springframework.boot.devtools.restart.RestartApplicationListener - Restart disabled due to context in which it is running
2025-03-05 11:40:49 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Starting InventroyControllerTest using Java 17.0.12 with PID 21564 (started by kasiram.palpandi in C:\Users\kasiram.palpandi\git\repository\BloodBankManagementSystem\Inventory-Service)
2025-03-05 11:40:49 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-03-05 11:40:50 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-05 11:40:50 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 194 ms. Found 2 JPA repository interfaces.
2025-03-05 11:40:51 [main] INFO  org.springframework.cloud.context.scope.GenericScope - BeanFactory id=5c617336-ca48-35fa-acf9-2c540da760b9
2025-03-05 11:40:51 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-05 11:40:51 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.8.Final
2025-03-05 11:40:51 [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-03-05 11:40:52 [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-05 11:40:52 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-05 11:40:52 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4a3516fd
2025-03-05 11:40:52 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-05 11:40:52 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-05 11:40:52 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-03-05 11:40:52 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-05 11:40:53 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-05 11:40:53 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:40:54 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-05 11:40:54 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:40:55 [main] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:40:55 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:40:55 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 2 ms
2025-03-05 11:40:55 [main] INFO  org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-03-05 11:40:55 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-03-05 11:40:55 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-03-05 11:40:55 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-03-05 11:40:55 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 11:40:55 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-03-05 11:40:55 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-03-05 11:40:55 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-03-05 11:40:55 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2025-03-05 11:40:55 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-03-05 11:40:55 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-03-05 11:40:55 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-03-05 11:40:56 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2025-03-05 11:40:56 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-03-05 11:40:56 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-03-05 11:40:56 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1741155056470 with initial instances count: 3
2025-03-05 11:40:56 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Registering application INVENTORY-SERVICE with eureka with status UP
2025-03-05 11:40:56 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741155056477, current=UP, previous=STARTING]
2025-03-05 11:40:56 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:40:56 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Started InventroyControllerTest in 7.257 seconds (process running for 9.04)
2025-03-05 11:40:56 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:40:57 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:40:58 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:40:58 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:40:58 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 2 ms
2025-03-05 11:40:58 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 11:40:58 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count details.
2025-03-05 11:40:58 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:40:58 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:40:58 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:40:58 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 11:40:58 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 11:40:58 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: USER
2025-03-05 11:40:58 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:40:58 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:40:58 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:40:58 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:40:58 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 11:40:58 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning 2 donors from inventory.
2025-03-05 11:40:58 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:40:58 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:40:58 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:40:58 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:40:58 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 11:40:58 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning 2 donors from inventory.
2025-03-05 11:40:58 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:40:58 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:40:58 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:40:58 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:40:58 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 11:40:58 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 11:40:58 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:40:58 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:40:58 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:40:58 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:40:58 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 11:40:58 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count details.
2025-03-05 11:40:58 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:40:58 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:40:58 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:40:58 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 11:40:58 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 11:40:58 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Donor 'kasiram' added successfully to inventory.
2025-03-05 11:40:58 [SpringApplicationShutdownHook] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Unregistering application INVENTORY-SERVICE with eureka with status DOWN
2025-03-05 11:40:58 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741155058810, current=DOWN, previous=UP]
2025-03-05 11:40:58 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:40:58 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:40:58 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:40:58 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-03-05 11:40:58 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-03-05 11:40:58 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-03-05 11:41:01 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2025-03-05 11:41:01 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - deregister  status: 200
2025-03-05 11:41:01 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-03-05 11:41:28 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - Re-registering apps/INVENTORY-SERVICE
2025-03-05 11:41:28 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:41:28 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:41:29 [main] INFO  org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest]: InventroyControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-03-05 11:41:29 [main] INFO  org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.Blood.Inventory_Service.InventoryServiceApplication for test class com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest
2025-03-05 11:41:29 [main] INFO  org.springframework.boot.devtools.restart.RestartApplicationListener - Restart disabled due to context in which it is running
2025-03-05 11:41:30 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Starting InventroyControllerTest using Java 17.0.12 with PID 12572 (started by kasiram.palpandi in C:\Users\kasiram.palpandi\git\repository\BloodBankManagementSystem\Inventory-Service)
2025-03-05 11:41:30 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-03-05 11:41:31 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-05 11:41:31 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 149 ms. Found 2 JPA repository interfaces.
2025-03-05 11:41:31 [main] INFO  org.springframework.cloud.context.scope.GenericScope - BeanFactory id=5c617336-ca48-35fa-acf9-2c540da760b9
2025-03-05 11:41:31 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-05 11:41:32 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.8.Final
2025-03-05 11:41:32 [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-03-05 11:41:32 [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-05 11:41:32 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-05 11:41:32 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@560be8c0
2025-03-05 11:41:32 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-05 11:41:32 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-05 11:41:32 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-03-05 11:41:32 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-05 11:41:33 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-05 11:41:33 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:41:34 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-05 11:41:34 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:41:35 [main] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:41:35 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:41:35 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 4 ms
2025-03-05 11:41:35 [main] INFO  org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-03-05 11:41:35 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-03-05 11:41:35 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-03-05 11:41:35 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-03-05 11:41:35 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 11:41:35 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-03-05 11:41:35 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-03-05 11:41:35 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-03-05 11:41:35 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2025-03-05 11:41:35 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-03-05 11:41:35 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-03-05 11:41:35 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-03-05 11:41:36 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2025-03-05 11:41:36 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-03-05 11:41:36 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-03-05 11:41:36 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1741155096487 with initial instances count: 3
2025-03-05 11:41:36 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Registering application INVENTORY-SERVICE with eureka with status UP
2025-03-05 11:41:36 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741155096495, current=UP, previous=STARTING]
2025-03-05 11:41:36 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:41:36 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Started InventroyControllerTest in 6.898 seconds (process running for 8.689)
2025-03-05 11:41:36 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:41:37 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:41:37 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:41:37 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:41:37 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:41:38 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 11:41:38 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count details.
2025-03-05 11:41:38 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:41:38 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:41:38 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:41:38 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:41:38 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 11:41:38 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: USER
2025-03-05 11:41:38 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:41:38 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:41:38 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:41:38 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:41:38 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 11:41:38 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 11:41:38 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:41:38 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:41:38 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:41:38 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:41:38 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 11:41:38 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning 2 donors from inventory.
2025-03-05 11:41:38 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:41:38 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:41:38 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:41:38 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:41:38 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 11:41:38 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning 2 donors from inventory.
2025-03-05 11:41:38 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:41:38 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:41:38 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:41:38 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 11:41:38 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 11:41:38 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 11:41:38 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:41:38 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:41:38 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:41:38 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:41:38 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 11:41:38 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count details.
2025-03-05 11:41:38 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:41:38 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:41:38 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:41:38 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 11:41:38 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 11:41:38 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Donor 'kasiram' added successfully to inventory.
2025-03-05 11:41:38 [SpringApplicationShutdownHook] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Unregistering application INVENTORY-SERVICE with eureka with status DOWN
2025-03-05 11:41:38 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741155098715, current=DOWN, previous=UP]
2025-03-05 11:41:38 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:41:38 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:41:38 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:41:38 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-03-05 11:41:38 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-03-05 11:41:38 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-03-05 11:41:41 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2025-03-05 11:41:41 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - deregister  status: 200
2025-03-05 11:41:41 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-03-05 11:41:58 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - Re-registering apps/INVENTORY-SERVICE
2025-03-05 11:41:58 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:41:58 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:44:56 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 11:46:02 [main] INFO  org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest]: InventroyControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-03-05 11:46:02 [main] INFO  org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.Blood.Inventory_Service.InventoryServiceApplication for test class com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest
2025-03-05 11:46:02 [main] INFO  org.springframework.boot.devtools.restart.RestartApplicationListener - Restart disabled due to context in which it is running
2025-03-05 11:46:03 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Starting InventroyControllerTest using Java 17.0.12 with PID 10556 (started by kasiram.palpandi in C:\Users\kasiram.palpandi\git\repository\BloodBankManagementSystem\Inventory-Service)
2025-03-05 11:46:03 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-03-05 11:46:04 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-05 11:46:04 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 138 ms. Found 2 JPA repository interfaces.
2025-03-05 11:46:04 [main] INFO  org.springframework.cloud.context.scope.GenericScope - BeanFactory id=5c617336-ca48-35fa-acf9-2c540da760b9
2025-03-05 11:46:05 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-05 11:46:05 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.8.Final
2025-03-05 11:46:05 [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-03-05 11:46:05 [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-05 11:46:05 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-05 11:46:05 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@432448
2025-03-05 11:46:05 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-05 11:46:05 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-05 11:46:05 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-03-05 11:46:05 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-05 11:46:06 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-05 11:46:06 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:46:07 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-05 11:46:07 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:46:08 [main] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:46:08 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:46:08 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 3 ms
2025-03-05 11:46:08 [main] INFO  org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-03-05 11:46:09 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-03-05 11:46:09 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-03-05 11:46:09 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-03-05 11:46:09 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 11:46:09 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-03-05 11:46:09 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-03-05 11:46:09 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-03-05 11:46:09 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2025-03-05 11:46:09 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-03-05 11:46:09 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-03-05 11:46:09 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-03-05 11:46:09 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2025-03-05 11:46:09 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-03-05 11:46:09 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-03-05 11:46:09 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1741155369806 with initial instances count: 3
2025-03-05 11:46:09 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Registering application INVENTORY-SERVICE with eureka with status UP
2025-03-05 11:46:09 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741155369814, current=UP, previous=STARTING]
2025-03-05 11:46:09 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:46:09 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Started InventroyControllerTest in 7.236 seconds (process running for 9.112)
2025-03-05 11:46:09 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:46:11 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:46:11 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:46:11 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:46:11 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 11:46:11 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 11:46:11 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count details.
2025-03-05 11:46:11 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:46:11 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:46:11 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:46:11 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:46:11 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 11:46:11 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: USER
2025-03-05 11:46:11 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:46:11 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:46:11 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:46:11 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 11:46:11 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'O+ve'
2025-03-05 11:46:11 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count for group 'O+ve': com.Blood.Inventory_Service.Model.BloodCount@6066a3f
2025-03-05 11:46:11 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:46:11 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:46:11 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:46:11 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 11:46:11 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 11:46:11 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 11:46:11 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:46:11 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:46:11 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:46:11 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:46:11 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 11:46:11 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning 2 donors from inventory.
2025-03-05 11:46:11 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:46:11 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:46:11 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:46:11 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:46:11 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 11:46:11 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning 2 donors from inventory.
2025-03-05 11:46:12 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:46:12 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:46:12 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:46:12 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:46:12 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 11:46:12 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 11:46:12 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:46:12 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:46:12 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:46:12 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:46:12 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 11:46:12 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count details.
2025-03-05 11:46:12 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:46:12 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:46:12 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:46:12 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:46:12 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 11:46:12 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Donor 'kasiram' added successfully to inventory.
2025-03-05 11:46:12 [SpringApplicationShutdownHook] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Unregistering application INVENTORY-SERVICE with eureka with status DOWN
2025-03-05 11:46:12 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741155372354, current=DOWN, previous=UP]
2025-03-05 11:46:12 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:46:12 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:46:12 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:46:12 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-03-05 11:46:12 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-03-05 11:46:12 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-03-05 11:46:15 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2025-03-05 11:46:15 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - deregister  status: 200
2025-03-05 11:46:15 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-03-05 11:46:28 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - Re-registering apps/INVENTORY-SERVICE
2025-03-05 11:46:28 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:46:28 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:46:36 [main] INFO  org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest]: InventroyControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-03-05 11:46:36 [main] INFO  org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.Blood.Inventory_Service.InventoryServiceApplication for test class com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest
2025-03-05 11:46:36 [main] INFO  org.springframework.boot.devtools.restart.RestartApplicationListener - Restart disabled due to context in which it is running
2025-03-05 11:46:37 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Starting InventroyControllerTest using Java 17.0.12 with PID 15376 (started by kasiram.palpandi in C:\Users\kasiram.palpandi\git\repository\BloodBankManagementSystem\Inventory-Service)
2025-03-05 11:46:37 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-03-05 11:46:38 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-05 11:46:38 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 170 ms. Found 2 JPA repository interfaces.
2025-03-05 11:46:38 [main] INFO  org.springframework.cloud.context.scope.GenericScope - BeanFactory id=5c617336-ca48-35fa-acf9-2c540da760b9
2025-03-05 11:46:39 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-05 11:46:39 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.8.Final
2025-03-05 11:46:39 [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-03-05 11:46:39 [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-05 11:46:39 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-05 11:46:39 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5764d421
2025-03-05 11:46:39 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-05 11:46:39 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-05 11:46:39 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-03-05 11:46:39 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-05 11:46:40 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-05 11:46:40 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:46:42 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-05 11:46:42 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:46:42 [main] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:46:42 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:46:42 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 2 ms
2025-03-05 11:46:43 [main] INFO  org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-03-05 11:46:43 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-03-05 11:46:43 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-03-05 11:46:43 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-03-05 11:46:43 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 11:46:43 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-03-05 11:46:43 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-03-05 11:46:43 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-03-05 11:46:43 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2025-03-05 11:46:43 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-03-05 11:46:43 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-03-05 11:46:43 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-03-05 11:46:44 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2025-03-05 11:46:44 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-03-05 11:46:44 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-03-05 11:46:44 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1741155404028 with initial instances count: 3
2025-03-05 11:46:44 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Registering application INVENTORY-SERVICE with eureka with status UP
2025-03-05 11:46:44 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741155404033, current=UP, previous=STARTING]
2025-03-05 11:46:44 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:46:44 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Started InventroyControllerTest in 7.367 seconds (process running for 9.165)
2025-03-05 11:46:44 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:46:45 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:46:45 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:46:45 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:46:45 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 3 ms
2025-03-05 11:46:45 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 11:46:45 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count details.
2025-03-05 11:46:46 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:46:46 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:46:46 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:46:46 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:46:46 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 11:46:46 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: USER
2025-03-05 11:46:46 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:46:46 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:46:46 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:46:46 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:46:46 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'O+ve'
2025-03-05 11:46:46 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count for group 'O+ve': com.Blood.Inventory_Service.Model.BloodCount@13acb4
2025-03-05 11:46:46 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:46:46 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:46:46 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:46:46 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:46:46 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 11:46:46 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 11:46:46 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:46:46 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:46:46 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:46:46 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:46:46 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 11:46:46 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning 2 donors from inventory.
2025-03-05 11:46:46 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:46:46 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:46:46 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:46:46 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:46:46 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 11:46:46 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning 2 donors from inventory.
2025-03-05 11:46:46 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:46:46 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:46:46 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:46:46 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:46:46 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 11:46:46 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 11:46:46 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:46:46 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:46:46 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:46:46 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:46:46 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 11:46:46 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count details.
2025-03-05 11:46:46 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:46:46 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:46:46 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:46:46 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:46:46 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 11:46:46 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Donor 'kasiram' added successfully to inventory.
2025-03-05 11:46:46 [SpringApplicationShutdownHook] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Unregistering application INVENTORY-SERVICE with eureka with status DOWN
2025-03-05 11:46:46 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741155406644, current=DOWN, previous=UP]
2025-03-05 11:46:46 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:46:46 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:46:46 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:46:46 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-03-05 11:46:46 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-03-05 11:46:46 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-03-05 11:46:49 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2025-03-05 11:46:49 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - deregister  status: 200
2025-03-05 11:46:49 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-03-05 11:46:58 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - Re-registering apps/INVENTORY-SERVICE
2025-03-05 11:46:58 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:46:58 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:47:21 [main] INFO  org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest]: InventroyControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-03-05 11:47:21 [main] INFO  org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.Blood.Inventory_Service.InventoryServiceApplication for test class com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest
2025-03-05 11:47:21 [main] INFO  org.springframework.boot.devtools.restart.RestartApplicationListener - Restart disabled due to context in which it is running
2025-03-05 11:47:22 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Starting InventroyControllerTest using Java 17.0.12 with PID 2664 (started by kasiram.palpandi in C:\Users\kasiram.palpandi\git\repository\BloodBankManagementSystem\Inventory-Service)
2025-03-05 11:47:22 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-03-05 11:47:23 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-05 11:47:23 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 151 ms. Found 2 JPA repository interfaces.
2025-03-05 11:47:23 [main] INFO  org.springframework.cloud.context.scope.GenericScope - BeanFactory id=5c617336-ca48-35fa-acf9-2c540da760b9
2025-03-05 11:47:23 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-05 11:47:23 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.8.Final
2025-03-05 11:47:23 [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-03-05 11:47:24 [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-05 11:47:24 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-05 11:47:24 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5dbc4598
2025-03-05 11:47:24 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-05 11:47:24 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-05 11:47:24 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-03-05 11:47:24 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-05 11:47:25 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-05 11:47:25 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:47:26 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-05 11:47:26 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:47:27 [main] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:47:27 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:47:27 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 3 ms
2025-03-05 11:47:27 [main] INFO  org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-03-05 11:47:27 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-03-05 11:47:27 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-03-05 11:47:27 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-03-05 11:47:27 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 11:47:28 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-03-05 11:47:28 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-03-05 11:47:28 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-03-05 11:47:28 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2025-03-05 11:47:28 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-03-05 11:47:28 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-03-05 11:47:28 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-03-05 11:47:28 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2025-03-05 11:47:28 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-03-05 11:47:28 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-03-05 11:47:28 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1741155448540 with initial instances count: 3
2025-03-05 11:47:28 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Registering application INVENTORY-SERVICE with eureka with status UP
2025-03-05 11:47:28 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741155448547, current=UP, previous=STARTING]
2025-03-05 11:47:28 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:47:28 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Started InventroyControllerTest in 6.938 seconds (process running for 8.665)
2025-03-05 11:47:28 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:47:30 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:47:30 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:47:30 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:47:30 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 11:47:30 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 11:47:30 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count details.
2025-03-05 11:47:30 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:47:30 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:47:30 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:47:30 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:47:30 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 11:47:30 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: USER
2025-03-05 11:47:30 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:47:30 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:47:30 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:47:30 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:47:30 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'O+ve'
2025-03-05 11:47:30 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count for group 'O+ve': com.Blood.Inventory_Service.Model.BloodCount@ec28717
2025-03-05 11:47:30 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:47:30 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:47:30 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:47:30 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 11:47:30 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 11:47:30 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 11:47:30 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:47:30 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:47:30 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:47:30 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 11:47:30 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 11:47:30 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning 2 donors from inventory.
2025-03-05 11:47:30 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:47:30 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:47:30 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:47:30 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:47:30 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 11:47:30 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning 2 donors from inventory.
2025-03-05 11:47:30 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:47:30 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:47:30 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:47:30 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:47:30 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 11:47:30 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 11:47:30 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:47:30 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:47:31 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:47:31 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:47:31 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 11:47:31 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count details.
2025-03-05 11:47:31 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:47:31 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:47:31 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:47:31 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:47:31 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 11:47:31 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Donor 'kasiram' added successfully to inventory.
2025-03-05 11:47:31 [SpringApplicationShutdownHook] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Unregistering application INVENTORY-SERVICE with eureka with status DOWN
2025-03-05 11:47:31 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741155451143, current=DOWN, previous=UP]
2025-03-05 11:47:31 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:47:31 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:47:31 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:47:31 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-03-05 11:47:31 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-03-05 11:47:31 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-03-05 11:47:34 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2025-03-05 11:47:34 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - deregister  status: 200
2025-03-05 11:47:34 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-03-05 11:47:58 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - Re-registering apps/INVENTORY-SERVICE
2025-03-05 11:47:58 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:47:58 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:48:19 [main] INFO  org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest]: InventroyControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-03-05 11:48:19 [main] INFO  org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.Blood.Inventory_Service.InventoryServiceApplication for test class com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest
2025-03-05 11:48:20 [main] INFO  org.springframework.boot.devtools.restart.RestartApplicationListener - Restart disabled due to context in which it is running
2025-03-05 11:48:20 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Starting InventroyControllerTest using Java 17.0.12 with PID 22280 (started by kasiram.palpandi in C:\Users\kasiram.palpandi\git\repository\BloodBankManagementSystem\Inventory-Service)
2025-03-05 11:48:20 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-03-05 11:48:21 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-05 11:48:21 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 146 ms. Found 2 JPA repository interfaces.
2025-03-05 11:48:21 [main] INFO  org.springframework.cloud.context.scope.GenericScope - BeanFactory id=5c617336-ca48-35fa-acf9-2c540da760b9
2025-03-05 11:48:22 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-05 11:48:22 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.8.Final
2025-03-05 11:48:22 [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-03-05 11:48:22 [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-05 11:48:23 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-05 11:48:23 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4d964c9e
2025-03-05 11:48:23 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-05 11:48:23 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-05 11:48:23 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-03-05 11:48:23 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-05 11:48:24 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-05 11:48:24 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:48:25 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-05 11:48:25 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:48:25 [main] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:48:25 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:48:25 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 2 ms
2025-03-05 11:48:26 [main] INFO  org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-03-05 11:48:26 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-03-05 11:48:26 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-03-05 11:48:26 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-03-05 11:48:26 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 11:48:26 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-03-05 11:48:26 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-03-05 11:48:26 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-03-05 11:48:26 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2025-03-05 11:48:26 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-03-05 11:48:26 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-03-05 11:48:26 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-03-05 11:48:27 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2025-03-05 11:48:27 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-03-05 11:48:27 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-03-05 11:48:27 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1741155507166 with initial instances count: 3
2025-03-05 11:48:27 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Registering application INVENTORY-SERVICE with eureka with status UP
2025-03-05 11:48:27 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741155507172, current=UP, previous=STARTING]
2025-03-05 11:48:27 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:48:27 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Started InventroyControllerTest in 7.176 seconds (process running for 8.97)
2025-03-05 11:48:27 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:48:29 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:48:29 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:48:29 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:48:29 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:48:29 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 11:48:29 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count details.
2025-03-05 11:48:29 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:48:29 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:48:29 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:48:29 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 2 ms
2025-03-05 11:48:29 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 11:48:29 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: USER
2025-03-05 11:48:29 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:48:29 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:48:29 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:48:29 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:48:29 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'O+ve'
2025-03-05 11:48:29 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count for group 'O+ve': com.Blood.Inventory_Service.Model.BloodCount@5ae7e5db
2025-03-05 11:48:29 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:48:29 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:48:29 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:48:29 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:48:29 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 11:48:29 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 11:48:29 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:48:29 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:48:29 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:48:29 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:48:29 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 11:48:29 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning 2 donors from inventory.
2025-03-05 11:48:29 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:48:29 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:48:29 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:48:29 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:48:29 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 11:48:29 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning 2 donors from inventory.
2025-03-05 11:48:29 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:48:29 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:48:29 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:48:29 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 11:48:29 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 11:48:29 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 11:48:29 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:48:29 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:48:29 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:48:29 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:48:29 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'A+ve'
2025-03-05 11:48:29 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count for group 'A+ve': com.Blood.Inventory_Service.Model.BloodCount@4bc76331
2025-03-05 11:48:29 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:48:29 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:48:29 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:48:29 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:48:29 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 11:48:29 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count details.
2025-03-05 11:48:29 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:48:29 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:48:29 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:48:29 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:48:29 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 11:48:29 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Donor 'kasiram' added successfully to inventory.
2025-03-05 11:48:29 [SpringApplicationShutdownHook] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Unregistering application INVENTORY-SERVICE with eureka with status DOWN
2025-03-05 11:48:29 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741155509917, current=DOWN, previous=UP]
2025-03-05 11:48:29 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:48:29 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:48:29 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:48:29 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-03-05 11:48:30 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-03-05 11:48:30 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-03-05 11:48:33 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2025-03-05 11:48:33 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - deregister  status: 200
2025-03-05 11:48:33 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-03-05 11:48:46 [main] INFO  org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest]: InventroyControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-03-05 11:48:46 [main] INFO  org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.Blood.Inventory_Service.InventoryServiceApplication for test class com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest
2025-03-05 11:48:46 [main] INFO  org.springframework.boot.devtools.restart.RestartApplicationListener - Restart disabled due to context in which it is running
2025-03-05 11:48:47 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Starting InventroyControllerTest using Java 17.0.12 with PID 12152 (started by kasiram.palpandi in C:\Users\kasiram.palpandi\git\repository\BloodBankManagementSystem\Inventory-Service)
2025-03-05 11:48:47 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-03-05 11:48:48 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-05 11:48:48 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 156 ms. Found 2 JPA repository interfaces.
2025-03-05 11:48:48 [main] INFO  org.springframework.cloud.context.scope.GenericScope - BeanFactory id=5c617336-ca48-35fa-acf9-2c540da760b9
2025-03-05 11:48:49 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-05 11:48:49 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.8.Final
2025-03-05 11:48:49 [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-03-05 11:48:49 [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-05 11:48:49 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-05 11:48:49 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@71f10042
2025-03-05 11:48:49 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-05 11:48:49 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-05 11:48:49 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-03-05 11:48:49 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-05 11:48:50 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-05 11:48:50 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:48:52 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-05 11:48:52 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:48:53 [main] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:48:53 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:48:53 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 2 ms
2025-03-05 11:48:55 [main] INFO  org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-03-05 11:48:55 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-03-05 11:48:55 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-03-05 11:48:55 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-03-05 11:48:55 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 11:48:55 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-03-05 11:48:55 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-03-05 11:48:55 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-03-05 11:48:55 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2025-03-05 11:48:55 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-03-05 11:48:55 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-03-05 11:48:55 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-03-05 11:48:56 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2025-03-05 11:48:56 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-03-05 11:48:56 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-03-05 11:48:56 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1741155536171 with initial instances count: 3
2025-03-05 11:48:56 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Registering application INVENTORY-SERVICE with eureka with status UP
2025-03-05 11:48:56 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741155536180, current=UP, previous=STARTING]
2025-03-05 11:48:56 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:48:56 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Started InventroyControllerTest in 9.398 seconds (process running for 11.283)
2025-03-05 11:48:56 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:48:58 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:48:58 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:48:58 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:48:58 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 11:48:58 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 11:48:58 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count details.
2025-03-05 11:48:59 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:48:59 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:48:59 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:48:59 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:48:59 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 11:48:59 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: USER
2025-03-05 11:48:59 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:48:59 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:48:59 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:48:59 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 11:48:59 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'O+ve'
2025-03-05 11:48:59 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count for group 'O+ve': com.Blood.Inventory_Service.Model.BloodCount@2f643a10
2025-03-05 11:48:59 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:48:59 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:48:59 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:48:59 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:48:59 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 11:48:59 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 11:48:59 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:48:59 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:48:59 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:48:59 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 11:48:59 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 11:48:59 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning 2 donors from inventory.
2025-03-05 11:48:59 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:48:59 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:48:59 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:48:59 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:48:59 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 11:48:59 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning 2 donors from inventory.
2025-03-05 11:48:59 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:48:59 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:48:59 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:48:59 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:48:59 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 11:48:59 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 11:48:59 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:48:59 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:48:59 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:48:59 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:48:59 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'A+ve'
2025-03-05 11:48:59 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count for group 'A+ve': com.Blood.Inventory_Service.Model.BloodCount@42930a42
2025-03-05 11:48:59 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:48:59 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:48:59 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:48:59 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 11:48:59 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 11:48:59 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count details.
2025-03-05 11:48:59 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:48:59 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:48:59 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:48:59 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:48:59 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 11:48:59 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Donor 'kasiram' added successfully to inventory.
2025-03-05 11:48:59 [SpringApplicationShutdownHook] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Unregistering application INVENTORY-SERVICE with eureka with status DOWN
2025-03-05 11:48:59 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741155539636, current=DOWN, previous=UP]
2025-03-05 11:48:59 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:48:59 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:48:59 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:48:59 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-03-05 11:48:59 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-03-05 11:48:59 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-03-05 11:49:02 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2025-03-05 11:49:02 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - deregister  status: 200
2025-03-05 11:49:02 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-03-05 11:49:28 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - Re-registering apps/INVENTORY-SERVICE
2025-03-05 11:49:28 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:49:28 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:49:37 [main] INFO  org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest]: InventroyControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-03-05 11:49:37 [main] INFO  org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.Blood.Inventory_Service.InventoryServiceApplication for test class com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest
2025-03-05 11:49:37 [main] INFO  org.springframework.boot.devtools.restart.RestartApplicationListener - Restart disabled due to context in which it is running
2025-03-05 11:49:38 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Starting InventroyControllerTest using Java 17.0.12 with PID 7924 (started by kasiram.palpandi in C:\Users\kasiram.palpandi\git\repository\BloodBankManagementSystem\Inventory-Service)
2025-03-05 11:49:38 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-03-05 11:49:39 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-05 11:49:39 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 147 ms. Found 2 JPA repository interfaces.
2025-03-05 11:49:40 [main] INFO  org.springframework.cloud.context.scope.GenericScope - BeanFactory id=5c617336-ca48-35fa-acf9-2c540da760b9
2025-03-05 11:49:40 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-05 11:49:40 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.8.Final
2025-03-05 11:49:40 [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-03-05 11:49:40 [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-05 11:49:40 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-05 11:49:41 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@217c6a1e
2025-03-05 11:49:41 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-05 11:49:41 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-05 11:49:41 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-03-05 11:49:41 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-05 11:49:41 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-05 11:49:41 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:49:42 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-05 11:49:42 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:49:43 [main] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:49:43 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:49:43 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 2 ms
2025-03-05 11:49:44 [main] INFO  org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-03-05 11:49:44 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-03-05 11:49:44 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-03-05 11:49:44 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-03-05 11:49:44 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 11:49:44 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-03-05 11:49:44 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-03-05 11:49:44 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-03-05 11:49:44 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2025-03-05 11:49:44 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-03-05 11:49:44 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-03-05 11:49:44 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-03-05 11:49:45 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2025-03-05 11:49:45 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-03-05 11:49:45 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-03-05 11:49:45 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1741155585238 with initial instances count: 3
2025-03-05 11:49:45 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Registering application INVENTORY-SERVICE with eureka with status UP
2025-03-05 11:49:45 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741155585244, current=UP, previous=STARTING]
2025-03-05 11:49:45 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:49:45 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Started InventroyControllerTest in 7.294 seconds (process running for 9.029)
2025-03-05 11:49:45 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:49:47 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:49:47 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:49:47 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:49:47 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:49:47 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 11:49:47 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count details.
2025-03-05 11:49:47 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:49:47 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:49:47 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:49:47 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:49:47 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 11:49:47 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: USER
2025-03-05 11:49:47 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:49:47 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:49:47 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:49:47 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:49:47 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'O+ve'
2025-03-05 11:49:47 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count for group 'O+ve': com.Blood.Inventory_Service.Model.BloodCount@2006673c
2025-03-05 11:49:47 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:49:47 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:49:47 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:49:47 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:49:47 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 11:49:47 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 11:49:47 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:49:47 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:49:47 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:49:47 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:49:47 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 11:49:47 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning 2 donors from inventory.
2025-03-05 11:49:47 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:49:47 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:49:47 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:49:47 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 11:49:47 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 11:49:47 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning 2 donors from inventory.
2025-03-05 11:49:47 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:49:47 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:49:47 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:49:47 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:49:47 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'B+ve'
2025-03-05 11:49:47 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 11:49:48 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:49:48 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:49:48 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:49:48 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 11:49:48 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 11:49:48 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 11:49:48 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:49:48 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:49:48 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:49:48 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:49:48 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'A+ve'
2025-03-05 11:49:48 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count for group 'A+ve': com.Blood.Inventory_Service.Model.BloodCount@1d5522e4
2025-03-05 11:49:48 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:49:48 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:49:48 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:49:48 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:49:48 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 11:49:48 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count details.
2025-03-05 11:49:48 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:49:48 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:49:48 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:49:48 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:49:48 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 11:49:48 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Donor 'kasiram' added successfully to inventory.
2025-03-05 11:49:48 [SpringApplicationShutdownHook] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Unregistering application INVENTORY-SERVICE with eureka with status DOWN
2025-03-05 11:49:48 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741155588144, current=DOWN, previous=UP]
2025-03-05 11:49:48 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:49:48 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:49:48 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:49:48 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-03-05 11:49:48 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-03-05 11:49:48 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-03-05 11:49:51 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2025-03-05 11:49:51 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - deregister  status: 200
2025-03-05 11:49:51 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-03-05 11:49:56 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 11:49:58 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - Re-registering apps/INVENTORY-SERVICE
2025-03-05 11:49:58 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:49:58 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:50:33 [main] INFO  org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest]: InventroyControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-03-05 11:50:33 [main] INFO  org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.Blood.Inventory_Service.InventoryServiceApplication for test class com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest
2025-03-05 11:50:33 [main] INFO  org.springframework.boot.devtools.restart.RestartApplicationListener - Restart disabled due to context in which it is running
2025-03-05 11:50:34 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Starting InventroyControllerTest using Java 17.0.12 with PID 12872 (started by kasiram.palpandi in C:\Users\kasiram.palpandi\git\repository\BloodBankManagementSystem\Inventory-Service)
2025-03-05 11:50:34 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-03-05 11:50:35 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-05 11:50:35 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 143 ms. Found 2 JPA repository interfaces.
2025-03-05 11:50:35 [main] INFO  org.springframework.cloud.context.scope.GenericScope - BeanFactory id=5c617336-ca48-35fa-acf9-2c540da760b9
2025-03-05 11:50:36 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-05 11:50:36 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.8.Final
2025-03-05 11:50:36 [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-03-05 11:50:36 [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-05 11:50:36 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-05 11:50:36 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@53d2f0ec
2025-03-05 11:50:36 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-05 11:50:37 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-05 11:50:37 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-03-05 11:50:37 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-05 11:50:37 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-05 11:50:37 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:50:38 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-05 11:50:38 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:50:39 [main] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:50:39 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:50:39 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 11:50:40 [main] INFO  org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-03-05 11:50:40 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-03-05 11:50:40 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-03-05 11:50:40 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-03-05 11:50:40 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 11:50:40 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-03-05 11:50:40 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-03-05 11:50:40 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-03-05 11:50:40 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2025-03-05 11:50:40 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-03-05 11:50:40 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-03-05 11:50:40 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-03-05 11:50:40 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2025-03-05 11:50:40 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-03-05 11:50:40 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-03-05 11:50:40 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1741155640854 with initial instances count: 3
2025-03-05 11:50:40 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Registering application INVENTORY-SERVICE with eureka with status UP
2025-03-05 11:50:40 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741155640860, current=UP, previous=STARTING]
2025-03-05 11:50:40 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:50:40 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Started InventroyControllerTest in 7.069 seconds (process running for 8.82)
2025-03-05 11:50:40 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:50:42 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:50:42 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:50:42 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:50:42 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 11:50:42 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 11:50:42 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count details.
2025-03-05 11:50:43 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:50:43 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:50:43 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:50:43 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:50:43 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 11:50:43 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: USER
2025-03-05 11:50:43 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:50:43 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:50:43 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:50:43 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 11:50:43 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'O+ve'
2025-03-05 11:50:43 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count for group 'O+ve': com.Blood.Inventory_Service.Model.BloodCount@24cb530d
2025-03-05 11:50:43 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:50:43 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:50:43 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:50:43 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:50:43 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 11:50:43 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 11:50:43 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:50:43 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:50:43 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:50:43 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:50:43 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 11:50:43 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning 2 donors from inventory.
2025-03-05 11:50:43 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:50:43 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:50:43 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:50:43 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:50:43 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 11:50:43 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning 2 donors from inventory.
2025-03-05 11:50:43 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:50:43 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:50:43 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:50:43 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:50:43 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'B+ve'
2025-03-05 11:50:43 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 11:50:43 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:50:43 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:50:43 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:50:43 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:50:43 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 11:50:43 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 11:50:43 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:50:43 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:50:43 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:50:43 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 11:50:43 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'A+ve'
2025-03-05 11:50:43 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count for group 'A+ve': com.Blood.Inventory_Service.Model.BloodCount@542aa32a
2025-03-05 11:50:43 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:50:43 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:50:43 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:50:43 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:50:43 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 11:50:43 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count details.
2025-03-05 11:50:43 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:50:43 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:50:43 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:50:43 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:50:43 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 11:50:43 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Donor 'kasiram' added successfully to inventory.
2025-03-05 11:50:43 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:50:43 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:50:43 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:50:43 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:50:43 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'AB-ve'
2025-03-05 11:50:43 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count for group 'AB-ve': null
2025-03-05 11:50:43 [SpringApplicationShutdownHook] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Unregistering application INVENTORY-SERVICE with eureka with status DOWN
2025-03-05 11:50:43 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741155643580, current=DOWN, previous=UP]
2025-03-05 11:50:43 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:50:43 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:50:43 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:50:43 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-03-05 11:50:43 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-03-05 11:50:43 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-03-05 11:50:46 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2025-03-05 11:50:46 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - deregister  status: 200
2025-03-05 11:50:46 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-03-05 11:50:59 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - Re-registering apps/INVENTORY-SERVICE
2025-03-05 11:50:59 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:50:59 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:54:56 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 11:56:24 [main] INFO  org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest]: InventroyControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-03-05 11:56:24 [main] INFO  org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.Blood.Inventory_Service.InventoryServiceApplication for test class com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest
2025-03-05 11:56:24 [main] INFO  org.springframework.boot.devtools.restart.RestartApplicationListener - Restart disabled due to context in which it is running
2025-03-05 11:56:25 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Starting InventroyControllerTest using Java 17.0.12 with PID 17856 (started by kasiram.palpandi in C:\Users\kasiram.palpandi\git\repository\BloodBankManagementSystem\Inventory-Service)
2025-03-05 11:56:25 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-03-05 11:56:26 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-05 11:56:26 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 161 ms. Found 2 JPA repository interfaces.
2025-03-05 11:56:26 [main] INFO  org.springframework.cloud.context.scope.GenericScope - BeanFactory id=5c617336-ca48-35fa-acf9-2c540da760b9
2025-03-05 11:56:27 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-05 11:56:27 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.8.Final
2025-03-05 11:56:27 [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-03-05 11:56:27 [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-05 11:56:27 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-05 11:56:27 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2e20c20b
2025-03-05 11:56:27 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-05 11:56:27 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-05 11:56:27 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-03-05 11:56:27 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-05 11:56:28 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-05 11:56:28 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:56:29 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-05 11:56:29 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:56:30 [main] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:56:30 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:56:30 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 3 ms
2025-03-05 11:56:31 [main] INFO  org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-03-05 11:56:32 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-03-05 11:56:32 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-03-05 11:56:32 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-03-05 11:56:32 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 11:56:32 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-03-05 11:56:32 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-03-05 11:56:32 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-03-05 11:56:32 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2025-03-05 11:56:32 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-03-05 11:56:32 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-03-05 11:56:32 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-03-05 11:56:33 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2025-03-05 11:56:33 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-03-05 11:56:33 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-03-05 11:56:33 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1741155993331 with initial instances count: 3
2025-03-05 11:56:33 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Registering application INVENTORY-SERVICE with eureka with status UP
2025-03-05 11:56:33 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741155993337, current=UP, previous=STARTING]
2025-03-05 11:56:33 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:56:33 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Started InventroyControllerTest in 8.7 seconds (process running for 10.462)
2025-03-05 11:56:33 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:56:34 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:56:34 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:56:34 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:56:34 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:56:35 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to delete donor 'Kaisram' from inventory.
2025-03-05 11:56:35 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Successfully deleted donor 'Kaisram' from inventory.
2025-03-05 11:56:35 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:56:35 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:56:35 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:56:35 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:56:35 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 11:56:35 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count details.
2025-03-05 11:56:35 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:56:35 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:56:35 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:56:35 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 11:56:35 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 11:56:35 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: USER
2025-03-05 11:56:35 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:56:35 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:56:35 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:56:35 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:56:35 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'O+ve'
2025-03-05 11:56:35 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count for group 'O+ve': com.Blood.Inventory_Service.Model.BloodCount@108817cc
2025-03-05 11:56:35 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:56:35 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:56:35 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:56:35 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:56:35 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 11:56:35 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 11:56:35 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:56:35 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:56:35 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:56:35 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:56:35 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 11:56:35 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning 2 donors from inventory.
2025-03-05 11:56:35 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:56:35 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:56:35 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:56:35 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:56:35 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 11:56:35 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning 2 donors from inventory.
2025-03-05 11:56:35 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:56:35 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:56:35 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:56:35 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:56:35 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'B+ve'
2025-03-05 11:56:35 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 11:56:35 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:56:35 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:56:35 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:56:35 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:56:35 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 11:56:35 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 11:56:35 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:56:35 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:56:35 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:56:35 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 11:56:35 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'A+ve'
2025-03-05 11:56:35 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count for group 'A+ve': com.Blood.Inventory_Service.Model.BloodCount@5d40034e
2025-03-05 11:56:35 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:56:35 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:56:35 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:56:35 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 11:56:35 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 11:56:35 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count details.
2025-03-05 11:56:35 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:56:35 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:56:35 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:56:35 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:56:35 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 11:56:35 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Donor 'kasiram' added successfully to inventory.
2025-03-05 11:56:35 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:56:35 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:56:35 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:56:35 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 11:56:35 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'AB-ve'
2025-03-05 11:56:35 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count for group 'AB-ve': null
2025-03-05 11:56:35 [SpringApplicationShutdownHook] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Unregistering application INVENTORY-SERVICE with eureka with status DOWN
2025-03-05 11:56:35 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741155995691, current=DOWN, previous=UP]
2025-03-05 11:56:35 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:56:35 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:56:35 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:56:35 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-03-05 11:56:35 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-03-05 11:56:35 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-03-05 11:56:38 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2025-03-05 11:56:38 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - deregister  status: 200
2025-03-05 11:56:38 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-03-05 11:56:59 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - Re-registering apps/INVENTORY-SERVICE
2025-03-05 11:56:59 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:56:59 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:57:07 [main] INFO  org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest]: InventroyControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-03-05 11:57:08 [main] INFO  org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.Blood.Inventory_Service.InventoryServiceApplication for test class com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest
2025-03-05 11:57:08 [main] INFO  org.springframework.boot.devtools.restart.RestartApplicationListener - Restart disabled due to context in which it is running
2025-03-05 11:57:08 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Starting InventroyControllerTest using Java 17.0.12 with PID 19744 (started by kasiram.palpandi in C:\Users\kasiram.palpandi\git\repository\BloodBankManagementSystem\Inventory-Service)
2025-03-05 11:57:08 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-03-05 11:57:09 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-05 11:57:10 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 146 ms. Found 2 JPA repository interfaces.
2025-03-05 11:57:10 [main] INFO  org.springframework.cloud.context.scope.GenericScope - BeanFactory id=5c617336-ca48-35fa-acf9-2c540da760b9
2025-03-05 11:57:10 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-05 11:57:10 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.8.Final
2025-03-05 11:57:10 [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-03-05 11:57:11 [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-05 11:57:11 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-05 11:57:11 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2e20c20b
2025-03-05 11:57:11 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-05 11:57:11 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-05 11:57:11 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-03-05 11:57:11 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-05 11:57:12 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-05 11:57:12 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:57:13 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-05 11:57:13 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:57:14 [main] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:57:14 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:57:14 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 7 ms
2025-03-05 11:57:14 [main] INFO  org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-03-05 11:57:15 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-03-05 11:57:15 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-03-05 11:57:15 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-03-05 11:57:15 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 11:57:15 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-03-05 11:57:15 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-03-05 11:57:15 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-03-05 11:57:15 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2025-03-05 11:57:15 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-03-05 11:57:15 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-03-05 11:57:15 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-03-05 11:57:15 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2025-03-05 11:57:15 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-03-05 11:57:15 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-03-05 11:57:15 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1741156035790 with initial instances count: 3
2025-03-05 11:57:15 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Registering application INVENTORY-SERVICE with eureka with status UP
2025-03-05 11:57:15 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741156035795, current=UP, previous=STARTING]
2025-03-05 11:57:15 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:57:15 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Started InventroyControllerTest in 7.259 seconds (process running for 9.246)
2025-03-05 11:57:15 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:57:16 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:57:17 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:57:17 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:57:17 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 3 ms
2025-03-05 11:57:17 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to delete donor 'Kaisram' from inventory.
2025-03-05 11:57:17 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Successfully deleted donor 'Kaisram' from inventory.
2025-03-05 11:57:17 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:57:17 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:57:17 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:57:17 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:57:17 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 11:57:17 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count details.
2025-03-05 11:57:17 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:57:17 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:57:17 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:57:17 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:57:17 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 11:57:17 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: USER
2025-03-05 11:57:17 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:57:17 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:57:17 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:57:17 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:57:17 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'O+ve'
2025-03-05 11:57:17 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count for group 'O+ve': com.Blood.Inventory_Service.Model.BloodCount@302e3484
2025-03-05 11:57:17 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:57:17 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:57:17 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:57:17 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:57:17 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 11:57:17 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 11:57:17 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:57:17 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:57:17 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:57:17 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 11:57:17 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 11:57:17 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning 2 donors from inventory.
2025-03-05 11:57:17 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:57:17 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:57:17 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:57:17 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:57:17 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 11:57:17 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning 2 donors from inventory.
2025-03-05 11:57:17 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:57:17 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:57:17 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:57:17 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:57:17 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'B+ve'
2025-03-05 11:57:17 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 11:57:17 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:57:17 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:57:17 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:57:17 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:57:17 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 11:57:17 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 11:57:17 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:57:17 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:57:17 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:57:17 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 11:57:17 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'A+ve'
2025-03-05 11:57:17 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count for group 'A+ve': com.Blood.Inventory_Service.Model.BloodCount@7f6a0ab
2025-03-05 11:57:17 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:57:17 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:57:17 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:57:17 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:57:17 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 11:57:17 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count details.
2025-03-05 11:57:17 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:57:17 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:57:17 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:57:17 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:57:17 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 11:57:17 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Donor 'kasiram' added successfully to inventory.
2025-03-05 11:57:17 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:57:17 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:57:17 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:57:17 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:57:17 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'AB-ve'
2025-03-05 11:57:17 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count for group 'AB-ve': null
2025-03-05 11:57:17 [SpringApplicationShutdownHook] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Unregistering application INVENTORY-SERVICE with eureka with status DOWN
2025-03-05 11:57:17 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741156037997, current=DOWN, previous=UP]
2025-03-05 11:57:17 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:57:18 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:57:18 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:57:18 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-03-05 11:57:18 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-03-05 11:57:18 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-03-05 11:57:21 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2025-03-05 11:57:21 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - deregister  status: 200
2025-03-05 11:57:21 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-03-05 11:57:29 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - Re-registering apps/INVENTORY-SERVICE
2025-03-05 11:57:29 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:57:29 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:57:38 [main] INFO  org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest]: InventroyControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-03-05 11:57:39 [main] INFO  org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.Blood.Inventory_Service.InventoryServiceApplication for test class com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest
2025-03-05 11:57:39 [main] INFO  org.springframework.boot.devtools.restart.RestartApplicationListener - Restart disabled due to context in which it is running
2025-03-05 11:57:39 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Starting InventroyControllerTest using Java 17.0.12 with PID 13220 (started by kasiram.palpandi in C:\Users\kasiram.palpandi\git\repository\BloodBankManagementSystem\Inventory-Service)
2025-03-05 11:57:39 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-03-05 11:57:40 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-05 11:57:41 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 146 ms. Found 2 JPA repository interfaces.
2025-03-05 11:57:41 [main] INFO  org.springframework.cloud.context.scope.GenericScope - BeanFactory id=5c617336-ca48-35fa-acf9-2c540da760b9
2025-03-05 11:57:41 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-05 11:57:41 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.8.Final
2025-03-05 11:57:41 [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-03-05 11:57:42 [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-05 11:57:42 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-05 11:57:42 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3bc18fec
2025-03-05 11:57:42 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-05 11:57:42 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-05 11:57:42 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-03-05 11:57:42 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-05 11:57:43 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-05 11:57:43 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:57:44 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-05 11:57:44 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:57:45 [main] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:57:45 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:57:45 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 2 ms
2025-03-05 11:57:45 [main] INFO  org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-03-05 11:57:46 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-03-05 11:57:46 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-03-05 11:57:46 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-03-05 11:57:46 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 11:57:46 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-03-05 11:57:46 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-03-05 11:57:46 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-03-05 11:57:46 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2025-03-05 11:57:46 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-03-05 11:57:46 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-03-05 11:57:46 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-03-05 11:57:46 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2025-03-05 11:57:46 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-03-05 11:57:46 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-03-05 11:57:46 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1741156066583 with initial instances count: 3
2025-03-05 11:57:46 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Registering application INVENTORY-SERVICE with eureka with status UP
2025-03-05 11:57:46 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741156066590, current=UP, previous=STARTING]
2025-03-05 11:57:46 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:57:46 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Started InventroyControllerTest in 7.135 seconds (process running for 8.952)
2025-03-05 11:57:46 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:57:47 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:57:48 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:57:48 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:57:48 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 11:57:48 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to delete donor 'Kasiram' from inventory.
2025-03-05 11:57:48 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Successfully deleted donor 'Kasiram' from inventory.
2025-03-05 11:57:48 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:57:48 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:57:48 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:57:48 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:57:48 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 11:57:48 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count details.
2025-03-05 11:57:49 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:57:49 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:57:49 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:57:49 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 11:57:49 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 11:57:49 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: USER
2025-03-05 11:57:49 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:57:49 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:57:49 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:57:49 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:57:49 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'O+ve'
2025-03-05 11:57:49 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count for group 'O+ve': com.Blood.Inventory_Service.Model.BloodCount@6f83db89
2025-03-05 11:57:49 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:57:49 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:57:49 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:57:49 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 11:57:49 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 11:57:49 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 11:57:49 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:57:49 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:57:49 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:57:49 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:57:49 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 11:57:49 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning 2 donors from inventory.
2025-03-05 11:57:49 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:57:49 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:57:49 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:57:49 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:57:49 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 11:57:49 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning 2 donors from inventory.
2025-03-05 11:57:49 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:57:49 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:57:49 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:57:49 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 11:57:49 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'B+ve'
2025-03-05 11:57:49 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 11:57:49 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:57:49 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:57:49 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:57:49 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:57:49 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 11:57:49 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 11:57:49 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:57:49 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:57:49 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:57:49 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:57:49 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'A+ve'
2025-03-05 11:57:49 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count for group 'A+ve': com.Blood.Inventory_Service.Model.BloodCount@5126c400
2025-03-05 11:57:49 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:57:49 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:57:49 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:57:49 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:57:49 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 11:57:49 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count details.
2025-03-05 11:57:49 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:57:49 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:57:49 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:57:49 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:57:49 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 11:57:49 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Donor 'kasiram' added successfully to inventory.
2025-03-05 11:57:49 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 11:57:49 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 11:57:49 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 11:57:49 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 11:57:49 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'AB-ve'
2025-03-05 11:57:49 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count for group 'AB-ve': null
2025-03-05 11:57:49 [SpringApplicationShutdownHook] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Unregistering application INVENTORY-SERVICE with eureka with status DOWN
2025-03-05 11:57:49 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741156069493, current=DOWN, previous=UP]
2025-03-05 11:57:49 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:57:49 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:57:49 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 11:57:49 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-03-05 11:57:49 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-03-05 11:57:49 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-03-05 11:57:52 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2025-03-05 11:57:52 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - deregister  status: 200
2025-03-05 11:57:52 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-03-05 11:57:59 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - Re-registering apps/INVENTORY-SERVICE
2025-03-05 11:57:59 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 11:57:59 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 11:59:56 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 12:04:56 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 12:07:25 [main] INFO  org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest]: InventroyControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-03-05 12:07:26 [main] INFO  org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.Blood.Inventory_Service.InventoryServiceApplication for test class com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest
2025-03-05 12:07:26 [main] INFO  org.springframework.boot.devtools.restart.RestartApplicationListener - Restart disabled due to context in which it is running
2025-03-05 12:07:26 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Starting InventroyControllerTest using Java 17.0.12 with PID 14032 (started by kasiram.palpandi in C:\Users\kasiram.palpandi\git\repository\BloodBankManagementSystem\Inventory-Service)
2025-03-05 12:07:26 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-03-05 12:07:27 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-05 12:07:28 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 153 ms. Found 2 JPA repository interfaces.
2025-03-05 12:07:28 [main] INFO  org.springframework.cloud.context.scope.GenericScope - BeanFactory id=5c617336-ca48-35fa-acf9-2c540da760b9
2025-03-05 12:07:28 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-05 12:07:28 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.8.Final
2025-03-05 12:07:28 [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-03-05 12:07:29 [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-05 12:07:29 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-05 12:07:29 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4d964c9e
2025-03-05 12:07:29 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-05 12:07:29 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-05 12:07:29 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-03-05 12:07:29 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-05 12:07:30 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-05 12:07:30 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 12:07:31 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-05 12:07:31 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:07:32 [main] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:07:32 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:07:32 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 3 ms
2025-03-05 12:07:32 [main] INFO  org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-03-05 12:07:32 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-03-05 12:07:32 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-03-05 12:07:33 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-03-05 12:07:33 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 12:07:33 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-03-05 12:07:33 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-03-05 12:07:33 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-03-05 12:07:33 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2025-03-05 12:07:33 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-03-05 12:07:33 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-03-05 12:07:33 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-03-05 12:07:33 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2025-03-05 12:07:33 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-03-05 12:07:33 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-03-05 12:07:33 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1741156653579 with initial instances count: 3
2025-03-05 12:07:33 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Registering application INVENTORY-SERVICE with eureka with status UP
2025-03-05 12:07:33 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741156653584, current=UP, previous=STARTING]
2025-03-05 12:07:33 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 12:07:33 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Started InventroyControllerTest in 7.148 seconds (process running for 8.99)
2025-03-05 12:07:33 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 12:07:35 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:07:35 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:07:35 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:07:35 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 12:07:35 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to delete donor 'Kasiram' from inventory.
2025-03-05 12:07:35 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Successfully deleted donor 'Kasiram' from inventory.
2025-03-05 12:07:35 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:07:35 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:07:35 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:07:35 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:07:35 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 12:07:35 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count details.
2025-03-05 12:07:35 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:07:35 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:07:35 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:07:35 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:07:35 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 12:07:35 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: USER
2025-03-05 12:07:35 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:07:35 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:07:35 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:07:35 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:07:35 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'O+ve'
2025-03-05 12:07:35 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count for group 'O+ve': com.Blood.Inventory_Service.Model.BloodCount@5d73aa0e
2025-03-05 12:07:35 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:07:35 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:07:35 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:07:35 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 12:07:35 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 12:07:35 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 12:07:35 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:07:35 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:07:35 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:07:35 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:07:35 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 12:07:35 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning 2 donors from inventory.
2025-03-05 12:07:35 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:07:35 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:07:35 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:07:35 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:07:35 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 12:07:35 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning 2 donors from inventory.
2025-03-05 12:07:35 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:07:35 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:07:35 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:07:35 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:07:35 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'B+ve'
2025-03-05 12:07:35 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 12:07:36 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:07:36 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:07:36 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:07:36 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:07:36 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 12:07:36 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 12:07:36 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:07:36 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:07:36 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:07:36 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:07:36 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'A+ve'
2025-03-05 12:07:36 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count for group 'A+ve': com.Blood.Inventory_Service.Model.BloodCount@3d020409
2025-03-05 12:07:36 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:07:36 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:07:36 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:07:36 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:07:36 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to delete donor 'Kasiram' from inventory.
2025-03-05 12:07:36 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Successfully deleted donor 'Kasiram' from inventory.
2025-03-05 12:07:36 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:07:36 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:07:36 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:07:36 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:07:36 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 12:07:36 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count details.
2025-03-05 12:07:36 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:07:36 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:07:36 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:07:36 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:07:36 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 12:07:36 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Donor 'kasiram' added successfully to inventory.
2025-03-05 12:07:36 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:07:36 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:07:36 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:07:36 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:07:36 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'AB-ve'
2025-03-05 12:07:36 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count for group 'AB-ve': null
2025-03-05 12:07:36 [SpringApplicationShutdownHook] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Unregistering application INVENTORY-SERVICE with eureka with status DOWN
2025-03-05 12:07:36 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741156656385, current=DOWN, previous=UP]
2025-03-05 12:07:36 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 12:07:36 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 12:07:36 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 12:07:36 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-03-05 12:07:36 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-03-05 12:07:36 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-03-05 12:07:39 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2025-03-05 12:07:39 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - deregister  status: 200
2025-03-05 12:07:39 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-03-05 12:07:59 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - Re-registering apps/INVENTORY-SERVICE
2025-03-05 12:07:59 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 12:07:59 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 12:08:17 [main] INFO  org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest]: InventroyControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-03-05 12:08:17 [main] INFO  org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.Blood.Inventory_Service.InventoryServiceApplication for test class com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest
2025-03-05 12:08:18 [main] INFO  org.springframework.boot.devtools.restart.RestartApplicationListener - Restart disabled due to context in which it is running
2025-03-05 12:08:18 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Starting InventroyControllerTest using Java 17.0.12 with PID 8920 (started by kasiram.palpandi in C:\Users\kasiram.palpandi\git\repository\BloodBankManagementSystem\Inventory-Service)
2025-03-05 12:08:18 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-03-05 12:08:19 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-05 12:08:19 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 146 ms. Found 2 JPA repository interfaces.
2025-03-05 12:08:19 [main] INFO  org.springframework.cloud.context.scope.GenericScope - BeanFactory id=5c617336-ca48-35fa-acf9-2c540da760b9
2025-03-05 12:08:20 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-05 12:08:20 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.8.Final
2025-03-05 12:08:20 [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-03-05 12:08:21 [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-05 12:08:21 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-05 12:08:21 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@432448
2025-03-05 12:08:21 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-05 12:08:21 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-05 12:08:21 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-03-05 12:08:21 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-05 12:08:22 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-05 12:08:22 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 12:08:23 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-05 12:08:23 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:08:24 [main] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:08:24 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:08:24 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 2 ms
2025-03-05 12:08:24 [main] INFO  org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-03-05 12:08:24 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-03-05 12:08:24 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-03-05 12:08:24 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-03-05 12:08:24 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 12:08:24 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-03-05 12:08:24 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-03-05 12:08:24 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-03-05 12:08:24 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2025-03-05 12:08:24 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-03-05 12:08:24 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-03-05 12:08:24 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-03-05 12:08:25 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2025-03-05 12:08:25 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-03-05 12:08:25 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-03-05 12:08:25 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1741156705254 with initial instances count: 3
2025-03-05 12:08:25 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Registering application INVENTORY-SERVICE with eureka with status UP
2025-03-05 12:08:25 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741156705260, current=UP, previous=STARTING]
2025-03-05 12:08:25 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 12:08:25 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Started InventroyControllerTest in 7.201 seconds (process running for 9.154)
2025-03-05 12:08:25 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 12:08:26 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:08:26 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:08:26 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:08:26 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 12:08:27 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to delete donor 'Kasiram' from inventory.
2025-03-05 12:08:27 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Successfully deleted donor 'Kasiram' from inventory.
2025-03-05 12:08:27 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:08:27 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:08:27 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:08:27 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 12:08:27 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 12:08:27 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count details.
2025-03-05 12:08:27 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:08:27 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:08:27 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:08:27 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:08:27 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 12:08:27 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: USER
2025-03-05 12:08:27 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:08:27 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:08:27 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:08:27 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:08:27 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'O+ve'
2025-03-05 12:08:27 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count for group 'O+ve': com.Blood.Inventory_Service.Model.BloodCount@1a325aa
2025-03-05 12:08:27 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:08:27 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:08:27 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:08:27 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:08:27 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 12:08:27 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 12:08:27 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:08:27 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:08:27 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:08:27 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 12:08:27 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to delete donor 'RandomUser' from inventory.
2025-03-05 12:08:27 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 12:08:27 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:08:27 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:08:27 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:08:27 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:08:27 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 12:08:27 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning 2 donors from inventory.
2025-03-05 12:08:27 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:08:27 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:08:27 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:08:27 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:08:27 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 12:08:27 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning 2 donors from inventory.
2025-03-05 12:08:27 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:08:27 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:08:27 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:08:27 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:08:27 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'B+ve'
2025-03-05 12:08:27 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 12:08:27 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:08:27 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:08:27 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:08:27 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 12:08:27 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 12:08:27 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 12:08:27 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:08:27 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:08:27 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:08:27 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:08:27 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'A+ve'
2025-03-05 12:08:27 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count for group 'A+ve': com.Blood.Inventory_Service.Model.BloodCount@68400aa5
2025-03-05 12:08:27 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:08:27 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:08:27 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:08:27 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:08:27 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to delete donor 'Kasiram' from inventory.
2025-03-05 12:08:27 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Successfully deleted donor 'Kasiram' from inventory.
2025-03-05 12:08:27 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:08:27 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:08:27 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:08:27 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:08:27 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 12:08:27 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count details.
2025-03-05 12:08:27 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:08:27 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:08:27 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:08:27 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:08:27 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 12:08:27 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Donor 'kasiram' added successfully to inventory.
2025-03-05 12:08:27 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:08:27 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:08:27 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:08:27 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:08:28 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'AB-ve'
2025-03-05 12:08:28 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count for group 'AB-ve': null
2025-03-05 12:08:28 [SpringApplicationShutdownHook] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Unregistering application INVENTORY-SERVICE with eureka with status DOWN
2025-03-05 12:08:28 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741156708028, current=DOWN, previous=UP]
2025-03-05 12:08:28 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 12:08:28 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 12:08:28 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 12:08:28 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-03-05 12:08:28 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-03-05 12:08:28 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-03-05 12:08:31 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2025-03-05 12:08:31 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - deregister  status: 200
2025-03-05 12:08:31 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-03-05 12:09:00 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - Re-registering apps/INVENTORY-SERVICE
2025-03-05 12:09:00 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 12:09:00 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 12:09:56 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 12:10:27 [main] INFO  org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest]: InventroyControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-03-05 12:10:27 [main] INFO  org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.Blood.Inventory_Service.InventoryServiceApplication for test class com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest
2025-03-05 12:10:27 [main] INFO  org.springframework.boot.devtools.restart.RestartApplicationListener - Restart disabled due to context in which it is running
2025-03-05 12:10:28 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Starting InventroyControllerTest using Java 17.0.12 with PID 18404 (started by kasiram.palpandi in C:\Users\kasiram.palpandi\git\repository\BloodBankManagementSystem\Inventory-Service)
2025-03-05 12:10:28 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-03-05 12:10:29 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-05 12:10:29 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 152 ms. Found 2 JPA repository interfaces.
2025-03-05 12:10:29 [main] INFO  org.springframework.cloud.context.scope.GenericScope - BeanFactory id=5c617336-ca48-35fa-acf9-2c540da760b9
2025-03-05 12:10:30 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-05 12:10:30 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.8.Final
2025-03-05 12:10:30 [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-03-05 12:10:30 [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-05 12:10:30 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-05 12:10:31 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2ff62720
2025-03-05 12:10:31 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-05 12:10:31 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-05 12:10:31 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-03-05 12:10:31 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-05 12:10:32 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-05 12:10:32 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 12:10:33 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-05 12:10:33 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:10:33 [main] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:10:33 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:10:33 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 3 ms
2025-03-05 12:10:34 [main] INFO  org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-03-05 12:10:34 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-03-05 12:10:34 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-03-05 12:10:34 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-03-05 12:10:34 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 12:10:34 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-03-05 12:10:34 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-03-05 12:10:34 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-03-05 12:10:34 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2025-03-05 12:10:34 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-03-05 12:10:34 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-03-05 12:10:34 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-03-05 12:10:34 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2025-03-05 12:10:34 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-03-05 12:10:34 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-03-05 12:10:34 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1741156834978 with initial instances count: 3
2025-03-05 12:10:34 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Registering application INVENTORY-SERVICE with eureka with status UP
2025-03-05 12:10:34 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741156834983, current=UP, previous=STARTING]
2025-03-05 12:10:34 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 12:10:35 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Started InventroyControllerTest in 7.057 seconds (process running for 8.776)
2025-03-05 12:10:35 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 12:10:36 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:10:36 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:10:36 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:10:36 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:10:36 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to delete donor 'Kasiram' from inventory.
2025-03-05 12:10:36 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Successfully deleted donor 'Kasiram' from inventory.
2025-03-05 12:10:37 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:10:37 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:10:37 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:10:37 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:10:37 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 12:10:37 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count details.
2025-03-05 12:10:37 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:10:37 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:10:37 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:10:37 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 12:10:37 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 12:10:37 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: USER
2025-03-05 12:10:37 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:10:37 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:10:37 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:10:37 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:10:37 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'O+ve'
2025-03-05 12:10:37 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count for group 'O+ve': com.Blood.Inventory_Service.Model.BloodCount@10dba2e3
2025-03-05 12:10:37 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:10:37 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:10:37 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:10:37 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:10:37 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 12:10:37 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 12:10:37 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:10:37 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:10:37 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:10:37 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 12:10:37 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to delete donor 'RandomUser' from inventory.
2025-03-05 12:10:37 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 12:10:37 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:10:37 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:10:37 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:10:37 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:10:37 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 12:10:37 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning 2 donors from inventory.
2025-03-05 12:10:37 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:10:37 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:10:37 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:10:37 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 12:10:37 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to delete donor 'UnknownUser' from inventory.
2025-03-05 12:10:37 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Attempt to delete non-existent donor 'UnknownUser' from inventory.
2025-03-05 12:10:37 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:10:37 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:10:37 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:10:37 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:10:37 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 12:10:37 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning 2 donors from inventory.
2025-03-05 12:10:37 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:10:37 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:10:37 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:10:37 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:10:37 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'B+ve'
2025-03-05 12:10:37 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 12:10:37 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:10:37 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:10:37 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:10:37 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:10:37 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 12:10:37 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 12:10:37 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:10:37 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:10:37 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:10:37 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:10:37 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'A+ve'
2025-03-05 12:10:37 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count for group 'A+ve': com.Blood.Inventory_Service.Model.BloodCount@3f098695
2025-03-05 12:10:37 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:10:37 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:10:37 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:10:37 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 12:10:37 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to delete donor 'Kasiram' from inventory.
2025-03-05 12:10:37 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Successfully deleted donor 'Kasiram' from inventory.
2025-03-05 12:10:37 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:10:37 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:10:37 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:10:37 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:10:37 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 12:10:37 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count details.
2025-03-05 12:10:37 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:10:37 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:10:37 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:10:37 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:10:37 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 12:10:37 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Donor 'kasiram' added successfully to inventory.
2025-03-05 12:10:37 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:10:37 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:10:37 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:10:37 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 12:10:37 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'AB-ve'
2025-03-05 12:10:37 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count for group 'AB-ve': null
2025-03-05 12:10:37 [SpringApplicationShutdownHook] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Unregistering application INVENTORY-SERVICE with eureka with status DOWN
2025-03-05 12:10:37 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741156837728, current=DOWN, previous=UP]
2025-03-05 12:10:37 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 12:10:37 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 12:10:37 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 12:10:37 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-03-05 12:10:37 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-03-05 12:10:37 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-03-05 12:10:40 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2025-03-05 12:10:40 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - deregister  status: 200
2025-03-05 12:10:40 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-03-05 12:11:00 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - Re-registering apps/INVENTORY-SERVICE
2025-03-05 12:11:00 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 12:11:00 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 12:14:56 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 12:19:56 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 12:21:23 [File Watcher] INFO  org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-03-05 12:21:23 [Thread-13] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Unregistering application INVENTORY-SERVICE with eureka with status DOWN
2025-03-05 12:21:23 [Thread-13] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741157483453, current=DOWN, previous=UP]
2025-03-05 12:21:23 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 12:21:23 [Thread-13] INFO  org.springframework.boot.web.embedded.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-03-05 12:21:23 [tomcat-shutdown] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8084"]
2025-03-05 12:21:23 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 12:21:23 [tomcat-shutdown] INFO  org.springframework.boot.web.embedded.tomcat.GracefulShutdown - Graceful shutdown complete
2025-03-05 12:21:23 [Thread-13] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8084"]
2025-03-05 12:21:23 [Thread-13] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 12:21:23 [Thread-13] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown initiated...
2025-03-05 12:21:23 [Thread-13] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown completed.
2025-03-05 12:21:23 [Thread-13] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-03-05 12:21:26 [Thread-13] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2025-03-05 12:21:26 [Thread-13] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - deregister  status: 200
2025-03-05 12:21:26 [Thread-13] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-03-05 12:21:26 [restartedMain] INFO  com.Blood.Inventory_Service.InventoryServiceApplication - Starting InventoryServiceApplication using Java 17.0.12 with PID 17944 (C:\Users\kasiram.palpandi\git\repository\BloodBankManagementSystem\Inventory-Service\target\classes started by kasiram.palpandi in C:\Users\kasiram.palpandi\git\repository\BloodBankManagementSystem\Inventory-Service)
2025-03-05 12:21:26 [restartedMain] INFO  com.Blood.Inventory_Service.InventoryServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-03-05 12:21:27 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-05 12:21:27 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 2 JPA repository interfaces.
2025-03-05 12:21:27 [restartedMain] INFO  org.springframework.cloud.context.scope.GenericScope - BeanFactory id=f2f93abc-93bf-3963-82c3-fd5199f6b8dd
2025-03-05 12:21:27 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8084 (http)
2025-03-05 12:21:27 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8084"]
2025-03-05 12:21:27 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-03-05 12:21:27 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.36]
2025-03-05 12:21:27 [restartedMain] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-03-05 12:21:27 [restartedMain] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 545 ms
2025-03-05 12:21:27 [restartedMain] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-05 12:21:27 [restartedMain] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-03-05 12:21:27 [restartedMain] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-05 12:21:27 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Starting...
2025-03-05 12:21:27 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-4 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6b01b171
2025-03-05 12:21:27 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Start completed.
2025-03-05 12:21:27 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-05 12:21:27 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-03-05 12:21:27 [restartedMain] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-4)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-05 12:21:27 [restartedMain] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-05 12:21:27 [restartedMain] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 12:21:27 [restartedMain] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-05 12:21:27 [restartedMain] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:21:27 [restartedMain] WARN  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2025-03-05 12:21:28 [restartedMain] INFO  org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-03-05 12:21:28 [restartedMain] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-03-05 12:21:28 [restartedMain] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-03-05 12:21:28 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-03-05 12:21:28 [restartedMain] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 12:21:28 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-03-05 12:21:28 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-03-05 12:21:28 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-03-05 12:21:28 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2025-03-05 12:21:28 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-03-05 12:21:28 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-03-05 12:21:28 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-03-05 12:21:28 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2025-03-05 12:21:28 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-03-05 12:21:28 [restartedMain] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-03-05 12:21:28 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1741157488398 with initial instances count: 3
2025-03-05 12:21:28 [restartedMain] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Registering application INVENTORY-SERVICE with eureka with status UP
2025-03-05 12:21:28 [restartedMain] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741157488401, current=UP, previous=STARTING]
2025-03-05 12:21:28 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 12:21:28 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8084"]
2025-03-05 12:21:28 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8084 (http) with context path '/'
2025-03-05 12:21:28 [restartedMain] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration - Updating port to 8084
2025-03-05 12:21:28 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 12:21:28 [restartedMain] INFO  com.Blood.Inventory_Service.InventoryServiceApplication - Started InventoryServiceApplication in 1.858 seconds (process running for 5472.169)
2025-03-05 12:21:28 [restartedMain] INFO  org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-03-05 12:22:30 [main] INFO  org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest]: InventroyControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-03-05 12:22:30 [main] INFO  org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.Blood.Inventory_Service.InventoryServiceApplication for test class com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest
2025-03-05 12:22:31 [main] INFO  org.springframework.boot.devtools.restart.RestartApplicationListener - Restart disabled due to context in which it is running
2025-03-05 12:22:31 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Starting InventroyControllerTest using Java 17.0.12 with PID 10772 (started by kasiram.palpandi in C:\Users\kasiram.palpandi\git\repository\BloodBankManagementSystem\Inventory-Service)
2025-03-05 12:22:31 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-03-05 12:22:32 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-05 12:22:32 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 160 ms. Found 2 JPA repository interfaces.
2025-03-05 12:22:33 [main] INFO  org.springframework.cloud.context.scope.GenericScope - BeanFactory id=5c617336-ca48-35fa-acf9-2c540da760b9
2025-03-05 12:22:33 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-05 12:22:33 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.8.Final
2025-03-05 12:22:33 [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-03-05 12:22:34 [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-05 12:22:34 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-05 12:22:34 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3fa57aa8
2025-03-05 12:22:34 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-05 12:22:34 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-05 12:22:34 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-03-05 12:22:34 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-05 12:22:35 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-05 12:22:35 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 12:22:36 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-05 12:22:36 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:22:36 [main] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:22:36 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:22:36 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 2 ms
2025-03-05 12:22:37 [main] INFO  org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-03-05 12:22:37 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-03-05 12:22:37 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-03-05 12:22:37 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-03-05 12:22:37 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 12:22:37 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-03-05 12:22:37 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-03-05 12:22:37 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-03-05 12:22:37 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2025-03-05 12:22:37 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-03-05 12:22:37 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-03-05 12:22:37 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-03-05 12:22:38 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2025-03-05 12:22:38 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-03-05 12:22:38 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-03-05 12:22:38 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1741157558293 with initial instances count: 3
2025-03-05 12:22:38 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Registering application INVENTORY-SERVICE with eureka with status UP
2025-03-05 12:22:38 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741157558298, current=UP, previous=STARTING]
2025-03-05 12:22:38 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 12:22:38 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Started InventroyControllerTest in 7.212 seconds (process running for 9.002)
2025-03-05 12:22:38 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 12:22:39 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:22:39 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:22:39 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:22:39 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 12:22:40 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to delete donor 'Kasiram' from inventory.
2025-03-05 12:22:40 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Successfully deleted donor 'Kasiram' from inventory.
2025-03-05 12:22:40 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:22:40 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:22:40 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:22:40 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:22:40 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 12:22:40 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count details.
2025-03-05 12:22:40 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:22:40 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:22:40 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:22:40 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:22:40 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 12:22:40 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: USER
2025-03-05 12:22:40 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:22:40 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:22:40 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:22:40 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 12:22:40 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'O+ve'
2025-03-05 12:22:40 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count for group 'O+ve': com.Blood.Inventory_Service.Model.BloodCount@3e4aabde
2025-03-05 12:22:40 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:22:40 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:22:40 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:22:40 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:22:40 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 12:22:40 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 12:22:40 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:22:40 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:22:40 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:22:40 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 12:22:40 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to delete donor 'RandomUser' from inventory.
2025-03-05 12:22:40 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 12:22:40 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:22:40 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:22:40 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:22:40 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:22:40 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 12:22:40 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning 2 donors from inventory.
2025-03-05 12:22:40 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:22:40 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:22:40 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:22:40 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 12:22:40 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to delete donor 'UnknownUser' from inventory.
2025-03-05 12:22:40 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Attempt to delete non-existent donor 'UnknownUser' from inventory.
2025-03-05 12:22:40 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:22:40 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:22:40 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:22:40 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 12:22:40 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 12:22:40 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning 2 donors from inventory.
2025-03-05 12:22:40 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:22:40 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:22:40 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:22:40 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 12:22:40 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'B+ve'
2025-03-05 12:22:40 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 12:22:40 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:22:40 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:22:40 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:22:40 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:22:40 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 12:22:40 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 12:22:40 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:22:40 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:22:40 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:22:40 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:22:40 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'A+ve'
2025-03-05 12:22:40 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count for group 'A+ve': com.Blood.Inventory_Service.Model.BloodCount@13ea4f97
2025-03-05 12:22:40 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:22:40 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:22:40 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:22:40 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:22:40 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to update inventory record: com.Blood.Inventory_Service.Model.Inventory@1d033ae1
2025-03-05 12:22:40 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Inventory record updated successfully: com.Blood.Inventory_Service.Model.Inventory@5de4f44e
2025-03-05 12:22:40 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:22:40 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:22:40 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:22:40 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:22:40 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to delete donor 'Kasiram' from inventory.
2025-03-05 12:22:40 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Successfully deleted donor 'Kasiram' from inventory.
2025-03-05 12:22:40 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:22:40 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:22:40 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:22:40 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:22:40 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 12:22:40 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count details.
2025-03-05 12:22:40 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:22:40 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:22:40 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:22:40 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:22:40 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 12:22:40 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Donor 'kasiram' added successfully to inventory.
2025-03-05 12:22:40 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:22:40 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:22:40 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:22:40 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:22:40 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'AB-ve'
2025-03-05 12:22:40 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count for group 'AB-ve': null
2025-03-05 12:22:41 [SpringApplicationShutdownHook] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Unregistering application INVENTORY-SERVICE with eureka with status DOWN
2025-03-05 12:22:41 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741157561014, current=DOWN, previous=UP]
2025-03-05 12:22:41 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 12:22:41 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 12:22:41 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 12:22:41 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-03-05 12:22:41 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-03-05 12:22:41 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-03-05 12:22:44 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2025-03-05 12:22:44 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - deregister  status: 200
2025-03-05 12:22:44 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-03-05 12:22:58 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - Re-registering apps/INVENTORY-SERVICE
2025-03-05 12:22:58 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 12:22:58 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 12:23:01 [main] INFO  org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest]: InventroyControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-03-05 12:23:01 [main] INFO  org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.Blood.Inventory_Service.InventoryServiceApplication for test class com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest
2025-03-05 12:23:02 [main] INFO  org.springframework.boot.devtools.restart.RestartApplicationListener - Restart disabled due to context in which it is running
2025-03-05 12:23:02 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Starting InventroyControllerTest using Java 17.0.12 with PID 11076 (started by kasiram.palpandi in C:\Users\kasiram.palpandi\git\repository\BloodBankManagementSystem\Inventory-Service)
2025-03-05 12:23:02 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-03-05 12:23:03 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-05 12:23:03 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 144 ms. Found 2 JPA repository interfaces.
2025-03-05 12:23:04 [main] INFO  org.springframework.cloud.context.scope.GenericScope - BeanFactory id=5c617336-ca48-35fa-acf9-2c540da760b9
2025-03-05 12:23:04 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-05 12:23:04 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.8.Final
2025-03-05 12:23:04 [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-03-05 12:23:04 [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-05 12:23:04 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-05 12:23:05 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@776a3365
2025-03-05 12:23:05 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-05 12:23:05 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-05 12:23:05 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-03-05 12:23:05 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-05 12:23:06 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-05 12:23:06 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 12:23:06 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-05 12:23:07 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:23:07 [main] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:23:07 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:23:07 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 3 ms
2025-03-05 12:23:08 [main] INFO  org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-03-05 12:23:08 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-03-05 12:23:08 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-03-05 12:23:08 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-03-05 12:23:08 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 12:23:08 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-03-05 12:23:08 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-03-05 12:23:08 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-03-05 12:23:08 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2025-03-05 12:23:08 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-03-05 12:23:08 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-03-05 12:23:08 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-03-05 12:23:09 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2025-03-05 12:23:09 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-03-05 12:23:09 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-03-05 12:23:09 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1741157589181 with initial instances count: 3
2025-03-05 12:23:09 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Registering application INVENTORY-SERVICE with eureka with status UP
2025-03-05 12:23:09 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741157589191, current=UP, previous=STARTING]
2025-03-05 12:23:09 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 12:23:09 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Started InventroyControllerTest in 7.136 seconds (process running for 8.844)
2025-03-05 12:23:09 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 12:23:10 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:23:10 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:23:10 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:23:10 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 12:23:10 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to delete donor 'Kasiram' from inventory.
2025-03-05 12:23:10 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Successfully deleted donor 'Kasiram' from inventory.
2025-03-05 12:23:10 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:23:10 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:23:10 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:23:10 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:23:10 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 12:23:10 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count details.
2025-03-05 12:23:10 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:23:10 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:23:10 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:23:10 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:23:10 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 12:23:10 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: USER
2025-03-05 12:23:10 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:23:10 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:23:10 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:23:10 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:23:10 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'O+ve'
2025-03-05 12:23:11 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count for group 'O+ve': com.Blood.Inventory_Service.Model.BloodCount@76b96594
2025-03-05 12:23:11 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:23:11 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:23:11 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:23:11 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:23:11 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 12:23:11 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 12:23:11 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:23:11 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:23:11 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:23:11 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 12:23:11 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to delete donor 'RandomUser' from inventory.
2025-03-05 12:23:11 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 12:23:11 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:23:11 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:23:11 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:23:11 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:23:11 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 12:23:11 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning 2 donors from inventory.
2025-03-05 12:23:11 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:23:11 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:23:11 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:23:11 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:23:11 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to delete donor 'UnknownUser' from inventory.
2025-03-05 12:23:11 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Attempt to delete non-existent donor 'UnknownUser' from inventory.
2025-03-05 12:23:11 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:23:11 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:23:11 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:23:11 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:23:11 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 12:23:11 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning 2 donors from inventory.
2025-03-05 12:23:11 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:23:11 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:23:11 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:23:11 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:23:11 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'B+ve'
2025-03-05 12:23:11 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 12:23:11 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:23:11 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:23:11 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:23:11 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:23:11 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 12:23:11 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 12:23:11 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:23:11 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:23:11 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:23:11 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:23:11 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'A+ve'
2025-03-05 12:23:11 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count for group 'A+ve': com.Blood.Inventory_Service.Model.BloodCount@7f792c5a
2025-03-05 12:23:11 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:23:11 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:23:11 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:23:11 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:23:11 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to update inventory record: com.Blood.Inventory_Service.Model.Inventory@7e41e1e4
2025-03-05 12:23:11 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Inventory record updated successfully: com.Blood.Inventory_Service.Model.Inventory@4e55d96
2025-03-05 12:23:11 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:23:11 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:23:11 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:23:11 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:23:11 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to delete donor 'Kasiram' from inventory.
2025-03-05 12:23:11 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Successfully deleted donor 'Kasiram' from inventory.
2025-03-05 12:23:11 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:23:11 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:23:11 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:23:11 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:23:11 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 12:23:11 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count details.
2025-03-05 12:23:11 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:23:11 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:23:11 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:23:11 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:23:11 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 12:23:11 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Donor 'kasiram' added successfully to inventory.
2025-03-05 12:23:11 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:23:11 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:23:11 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:23:11 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 12:23:11 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'AB-ve'
2025-03-05 12:23:11 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count for group 'AB-ve': null
2025-03-05 12:23:11 [SpringApplicationShutdownHook] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Unregistering application INVENTORY-SERVICE with eureka with status DOWN
2025-03-05 12:23:11 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741157591694, current=DOWN, previous=UP]
2025-03-05 12:23:11 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 12:23:11 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 12:23:11 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 12:23:11 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-03-05 12:23:11 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-03-05 12:23:11 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-03-05 12:23:14 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2025-03-05 12:23:14 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - deregister  status: 200
2025-03-05 12:23:14 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-03-05 12:23:28 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - Re-registering apps/INVENTORY-SERVICE
2025-03-05 12:23:28 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 12:23:28 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 12:23:52 [main] INFO  org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest]: InventroyControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-03-05 12:23:52 [main] INFO  org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.Blood.Inventory_Service.InventoryServiceApplication for test class com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest
2025-03-05 12:23:52 [main] INFO  org.springframework.boot.devtools.restart.RestartApplicationListener - Restart disabled due to context in which it is running
2025-03-05 12:23:53 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Starting InventroyControllerTest using Java 17.0.12 with PID 18584 (started by kasiram.palpandi in C:\Users\kasiram.palpandi\git\repository\BloodBankManagementSystem\Inventory-Service)
2025-03-05 12:23:53 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-03-05 12:23:54 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-05 12:23:54 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 174 ms. Found 2 JPA repository interfaces.
2025-03-05 12:23:54 [main] INFO  org.springframework.cloud.context.scope.GenericScope - BeanFactory id=5c617336-ca48-35fa-acf9-2c540da760b9
2025-03-05 12:23:55 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-05 12:23:55 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.8.Final
2025-03-05 12:23:55 [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-03-05 12:23:55 [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-05 12:23:55 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-05 12:23:55 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3fa57aa8
2025-03-05 12:23:55 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-05 12:23:55 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-05 12:23:55 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-03-05 12:23:56 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-05 12:23:57 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-05 12:23:57 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 12:23:57 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-05 12:23:58 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:23:58 [main] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:23:58 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:23:58 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 2 ms
2025-03-05 12:23:59 [main] INFO  org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-03-05 12:23:59 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-03-05 12:23:59 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-03-05 12:23:59 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-03-05 12:23:59 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 12:23:59 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-03-05 12:23:59 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-03-05 12:23:59 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-03-05 12:23:59 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2025-03-05 12:23:59 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-03-05 12:23:59 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-03-05 12:23:59 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-03-05 12:24:00 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2025-03-05 12:24:00 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-03-05 12:24:00 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-03-05 12:24:00 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1741157640309 with initial instances count: 3
2025-03-05 12:24:00 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Registering application INVENTORY-SERVICE with eureka with status UP
2025-03-05 12:24:00 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741157640314, current=UP, previous=STARTING]
2025-03-05 12:24:00 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 12:24:00 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Started InventroyControllerTest in 7.683 seconds (process running for 9.461)
2025-03-05 12:24:00 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 12:24:01 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:24:01 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:24:01 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:24:01 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 2 ms
2025-03-05 12:24:01 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to delete donor 'Kasiram' from inventory.
2025-03-05 12:24:01 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Successfully deleted donor 'Kasiram' from inventory.
2025-03-05 12:24:01 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:24:01 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:24:01 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:24:01 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 12:24:01 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to update inventory record: com.Blood.Inventory_Service.Model.Inventory@2c4af3ae
2025-03-05 12:24:01 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Inventory record updated successfully: com.Blood.Inventory_Service.Model.Inventory@3842ccf9
2025-03-05 12:24:02 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:24:02 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:24:02 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:24:02 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:24:02 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 12:24:02 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count details.
2025-03-05 12:24:02 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:24:02 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:24:02 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:24:02 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:24:02 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 12:24:02 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: USER
2025-03-05 12:24:02 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:24:02 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:24:02 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:24:02 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:24:02 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'O+ve'
2025-03-05 12:24:02 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count for group 'O+ve': com.Blood.Inventory_Service.Model.BloodCount@3918a9f9
2025-03-05 12:24:02 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:24:02 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:24:02 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:24:02 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:24:02 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 12:24:02 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 12:24:02 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:24:02 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:24:02 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:24:02 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:24:02 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to delete donor 'RandomUser' from inventory.
2025-03-05 12:24:02 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 12:24:02 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:24:02 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:24:02 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:24:02 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 12:24:02 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 12:24:02 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning 2 donors from inventory.
2025-03-05 12:24:02 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:24:02 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:24:02 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:24:02 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 12:24:02 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to delete donor 'UnknownUser' from inventory.
2025-03-05 12:24:02 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Attempt to delete non-existent donor 'UnknownUser' from inventory.
2025-03-05 12:24:02 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:24:02 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:24:02 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:24:02 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:24:02 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 12:24:02 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning 2 donors from inventory.
2025-03-05 12:24:02 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:24:02 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:24:02 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:24:02 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:24:02 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'B+ve'
2025-03-05 12:24:02 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 12:24:02 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:24:02 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:24:02 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:24:02 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 12:24:02 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 12:24:02 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 12:24:02 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:24:02 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:24:02 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:24:02 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:24:02 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'A+ve'
2025-03-05 12:24:02 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count for group 'A+ve': com.Blood.Inventory_Service.Model.BloodCount@5de4f44e
2025-03-05 12:24:02 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:24:02 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:24:02 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:24:02 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:24:02 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to update inventory record: com.Blood.Inventory_Service.Model.Inventory@479a2453
2025-03-05 12:24:02 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Inventory record updated successfully: com.Blood.Inventory_Service.Model.Inventory@33c7319e
2025-03-05 12:24:02 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:24:02 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:24:02 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:24:02 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:24:02 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to delete donor 'Kasiram' from inventory.
2025-03-05 12:24:02 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Successfully deleted donor 'Kasiram' from inventory.
2025-03-05 12:24:02 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:24:02 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:24:02 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:24:02 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:24:02 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 12:24:02 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count details.
2025-03-05 12:24:02 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:24:02 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:24:02 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:24:02 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:24:02 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 12:24:02 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Donor 'kasiram' added successfully to inventory.
2025-03-05 12:24:02 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:24:02 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:24:02 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:24:02 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 12:24:02 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'AB-ve'
2025-03-05 12:24:02 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count for group 'AB-ve': null
2025-03-05 12:24:02 [SpringApplicationShutdownHook] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Unregistering application INVENTORY-SERVICE with eureka with status DOWN
2025-03-05 12:24:02 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741157642582, current=DOWN, previous=UP]
2025-03-05 12:24:02 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 12:24:02 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 12:24:02 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 12:24:02 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-03-05 12:24:02 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-03-05 12:24:02 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-03-05 12:24:05 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2025-03-05 12:24:05 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - deregister  status: 200
2025-03-05 12:24:05 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-03-05 12:24:28 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - Re-registering apps/INVENTORY-SERVICE
2025-03-05 12:24:28 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 12:24:28 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 12:24:47 [main] INFO  org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest]: InventroyControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-03-05 12:24:47 [main] INFO  org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.Blood.Inventory_Service.InventoryServiceApplication for test class com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest
2025-03-05 12:24:47 [main] INFO  org.springframework.boot.devtools.restart.RestartApplicationListener - Restart disabled due to context in which it is running
2025-03-05 12:24:48 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Starting InventroyControllerTest using Java 17.0.12 with PID 15760 (started by kasiram.palpandi in C:\Users\kasiram.palpandi\git\repository\BloodBankManagementSystem\Inventory-Service)
2025-03-05 12:24:48 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-03-05 12:24:49 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-03-05 12:24:49 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 140 ms. Found 2 JPA repository interfaces.
2025-03-05 12:24:49 [main] INFO  org.springframework.cloud.context.scope.GenericScope - BeanFactory id=5c617336-ca48-35fa-acf9-2c540da760b9
2025-03-05 12:24:49 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-03-05 12:24:50 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.8.Final
2025-03-05 12:24:50 [main] INFO  org.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-03-05 12:24:50 [main] INFO  org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-03-05 12:24:50 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-03-05 12:24:50 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@306cfb8a
2025-03-05 12:24:50 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-03-05 12:24:50 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-03-05 12:24:50 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-03-05 12:24:50 [main] INFO  org.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-03-05 12:24:51 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-03-05 12:24:51 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 12:24:52 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-03-05 12:24:52 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:24:53 [main] INFO  org.springframework.boot.test.mock.web.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:24:53 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:24:53 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 3 ms
2025-03-05 12:24:53 [main] INFO  org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-03-05 12:24:53 [main] WARN  org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-03-05 12:24:54 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-03-05 12:24:54 [main] INFO  com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-03-05 12:24:54 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 12:24:54 [main] INFO  com.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-03-05 12:24:54 [main] INFO  com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-03-05 12:24:54 [main] INFO  com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-03-05 12:24:54 [main] INFO  com.netflix.discovery.DiscoveryClient - Application is null : false
2025-03-05 12:24:54 [main] INFO  com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-03-05 12:24:54 [main] INFO  com.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-03-05 12:24:54 [main] INFO  com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-03-05 12:24:54 [main] INFO  com.netflix.discovery.DiscoveryClient - The response status is 200
2025-03-05 12:24:54 [main] INFO  com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-03-05 12:24:54 [main] INFO  com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-03-05 12:24:54 [main] INFO  com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1741157694529 with initial instances count: 3
2025-03-05 12:24:54 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Registering application INVENTORY-SERVICE with eureka with status UP
2025-03-05 12:24:54 [main] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741157694539, current=UP, previous=STARTING]
2025-03-05 12:24:54 [main] INFO  com.Blood.Inventory_Service.ControllerTest.InventroyControllerTest - Started InventroyControllerTest in 6.842 seconds (process running for 8.737)
2025-03-05 12:24:54 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 12:24:54 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 12:24:55 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:24:55 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:24:55 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:24:55 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 12:24:56 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to delete donor 'Kasiram' from inventory.
2025-03-05 12:24:56 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Successfully deleted donor 'Kasiram' from inventory.
2025-03-05 12:24:56 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:24:56 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:24:56 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:24:56 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:24:56 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to update inventory record: com.Blood.Inventory_Service.Model.Inventory@1b272037
2025-03-05 12:24:56 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Inventory record updated successfully: com.Blood.Inventory_Service.Model.Inventory@2c4af3ae
2025-03-05 12:24:56 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:24:56 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:24:56 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:24:56 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:24:56 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 12:24:56 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count details.
2025-03-05 12:24:56 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:24:56 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:24:56 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:24:56 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:24:56 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 12:24:56 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: USER
2025-03-05 12:24:56 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:24:56 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:24:56 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:24:56 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:24:56 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'O+ve'
2025-03-05 12:24:56 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count for group 'O+ve': com.Blood.Inventory_Service.Model.BloodCount@5879197b
2025-03-05 12:24:56 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:24:56 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:24:56 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:24:56 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:24:56 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 12:24:56 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 12:24:56 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:24:56 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:24:56 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:24:56 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:24:56 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to update inventory record: com.Blood.Inventory_Service.Model.Inventory@3a235a93
2025-03-05 12:24:56 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 12:24:56 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:24:56 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:24:56 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:24:56 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:24:56 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to delete donor 'RandomUser' from inventory.
2025-03-05 12:24:56 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 12:24:57 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:24:57 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:24:57 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:24:57 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 1 ms
2025-03-05 12:24:57 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 12:24:57 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning 2 donors from inventory.
2025-03-05 12:24:57 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:24:57 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:24:57 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:24:57 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:24:57 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to delete donor 'UnknownUser' from inventory.
2025-03-05 12:24:57 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Attempt to delete non-existent donor 'UnknownUser' from inventory.
2025-03-05 12:24:57 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:24:57 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:24:57 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:24:57 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:24:57 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 12:24:57 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning 2 donors from inventory.
2025-03-05 12:24:57 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:24:57 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:24:57 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:24:57 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:24:57 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'B+ve'
2025-03-05 12:24:57 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 12:24:57 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:24:57 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:24:57 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:24:57 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:24:57 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch all donors from inventory.
2025-03-05 12:24:57 [main] WARN  com.Blood.Inventory_Service.Controller.InventoryController - Unauthorized access attempt by role: GUEST
2025-03-05 12:24:57 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:24:57 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:24:57 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:24:57 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:24:57 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'A+ve'
2025-03-05 12:24:57 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count for group 'A+ve': com.Blood.Inventory_Service.Model.BloodCount@772ccecf
2025-03-05 12:24:57 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:24:57 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:24:57 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:24:57 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:24:57 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to update inventory record: com.Blood.Inventory_Service.Model.Inventory@170df9b8
2025-03-05 12:24:57 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Inventory record updated successfully: com.Blood.Inventory_Service.Model.Inventory@3610b408
2025-03-05 12:24:57 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:24:57 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:24:57 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:24:57 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:24:57 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to delete donor 'Kasiram' from inventory.
2025-03-05 12:24:57 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Successfully deleted donor 'Kasiram' from inventory.
2025-03-05 12:24:57 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:24:57 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:24:57 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:24:57 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:24:57 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch total blood count.
2025-03-05 12:24:57 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count details.
2025-03-05 12:24:57 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:24:57 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:24:57 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:24:57 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:24:57 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to add donor 'kasiram' with 2 units of blood on 2024-03-05
2025-03-05 12:24:57 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Donor 'kasiram' added successfully to inventory.
2025-03-05 12:24:57 [main] INFO  org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-03-05 12:24:57 [main] INFO  org.springframework.mock.web.MockServletContext - Initializing Spring TestDispatcherServlet ''
2025-03-05 12:24:57 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Initializing Servlet ''
2025-03-05 12:24:57 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - Completed initialization in 0 ms
2025-03-05 12:24:57 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Received request to fetch blood count for group 'AB-ve'
2025-03-05 12:24:57 [main] INFO  com.Blood.Inventory_Service.Controller.InventoryController - Returning blood count for group 'AB-ve': null
2025-03-05 12:24:57 [SpringApplicationShutdownHook] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Unregistering application INVENTORY-SERVICE with eureka with status DOWN
2025-03-05 12:24:57 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1741157697723, current=DOWN, previous=UP]
2025-03-05 12:24:57 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 12:24:57 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 12:24:57 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-03-05 12:24:57 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-03-05 12:24:57 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-03-05 12:24:57 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2025-03-05 12:25:00 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Unregistering ...
2025-03-05 12:25:00 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - deregister  status: 200
2025-03-05 12:25:00 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2025-03-05 12:25:28 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - Re-registering apps/INVENTORY-SERVICE
2025-03-05 12:25:28 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084: registering service...
2025-03-05 12:25:28 [DiscoveryClient-HeartbeatExecutor-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_INVENTORY-SERVICE/Asplap1017.Aspiresys.com:Inventory-Service:8084 - registration status: 204
2025-03-05 12:26:28 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 12:31:28 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 13:44:43 [HikariPool-4 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-4 - Thread starvation or clock leap detected (housekeeper delta=1h10m45s862ms598µs800ns).
2025-03-05 13:46:44 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 13:59:41 [HikariPool-4 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-4 - Thread starvation or clock leap detected (housekeeper delta=9m27s920ms349µs).
2025-03-05 14:00:42 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 14:05:42 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 14:10:42 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 14:15:42 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 14:20:42 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 14:25:42 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 14:30:42 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 14:35:42 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 14:40:42 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 14:45:42 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 14:50:42 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 14:55:42 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 15:00:42 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 15:05:42 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 15:10:42 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 15:15:42 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 15:20:42 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 15:25:42 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 15:30:42 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 15:35:42 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 15:40:42 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 15:45:42 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 15:50:42 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 15:55:42 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 16:00:42 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 16:05:42 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 16:10:42 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 16:15:42 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 16:20:42 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 16:25:42 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 17:02:31 [HikariPool-4 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-4 - Thread starvation or clock leap detected (housekeeper delta=36m47s475ms543µs600ns).
2025-03-05 17:07:00 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 17:12:00 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 17:17:00 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 17:22:00 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 17:27:00 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 17:32:00 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 17:37:00 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-03-05 17:42:00 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
