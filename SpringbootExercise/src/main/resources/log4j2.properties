# Root Logger Level (Set to INFO to Reduce Excess Logs)
rootLogger.level =info
rootLogger.appenderRefs = console, rollingFile
rootLogger.appenderRef.console.ref = Console
rootLogger.appenderRef.rollingFile.ref = RollingFileLogger

# Console Appender (For Debugging)
appender.console.type = Console
appender.console.name = Console
appender.console.target = SYSTEM_OUT
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = %d{yyyy-MM-dd HH:mm:ss} [%t] %-5level %logger{36} - %msg%n

# Rolling File Appender (Fix Continuous Logging Issue)
appender.rollingFile.type = RollingFile
appender.rollingFile.name = RollingFileLogger
appender.rollingFile.fileName = logs/mylogging.log
appender.rollingFile.filePattern = logs/mylogging-%d{yyyy-MM-dd}.log.gz

# File Layout (Buffered to Avoid Constant Writes)
appender.rollingFile.layout.type = PatternLayout
appender.rollingFile.layout.pattern = %d{yyyy-MM-dd HH:mm:ss} [%t] %-5level %logger{36} - %msg%n

# Prevent Continuous Log Writes
appender.rollingFile.immediateFlush = false  # Prevents writing every log instantly
appender.rollingFile.bufferedIO = true  # Use buffer to reduce disk writes
appender.rollingFile.bufferSize = 8192  # 8KB buffer (adjust if needed)

# Rolling Policy (Daily, No Continuous Writing)
appender.rollingFile.policies.type = Policies
appender.rollingFile.policies.time.type = TimeBasedTriggeringPolicy
appender.rollingFile.policies.time.interval = 1
appender.rollingFile.policies.time.modulate = true
